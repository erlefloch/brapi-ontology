const rawWordList = {
    "@context": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The JSON-LD Context is used to provide JSON-LD definitions to each field in a JSON object. By providing an array of context file urls, a BrAPI response object becomes JSON-LD compatible.  \n\nFor more information, see https://w3c.github.io/json-ld-syntax/#the-context"
            }
        ]
    },
    "Accept": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/observations/{searchResultsDbId}",
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The requested content type which should be returned by the server"
            }
        ]
    },
    "AlleleMatrix": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "The AlleleMatrix object is used to describe a matrix of genotyping results. This 2d array of data reduces the overall size of the response for larger datasets, when compared to the Calls endpoints. This makes genotype data retrieval faster and easier."
            }
        ]
    },
    "Authorization": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "get /breedingmethods",
                        "put /methods/{methodDbId}",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /attributes",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} </strong>"
            }
        ]
    },
    "Call": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A Call represents the determination of genotype with respect to a particular Variant. It may include associated information such as quality and phasing. For example, a call might assign a probability of 0.32 to the occurrence of a SNP named RS_1234 in a Call Set with the name NA_12345."
            }
        ]
    },
    "CallSet": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A CallSet is a collection of Calls that were generated by the same analysis of the same Sample"
            }
        ]
    },
    "GenomeMap": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "The GenomeMap represents the metadata associated with a reference map of a particular species genome. A GenomeMap can either represent a physical map or genetic map."
            }
        ]
    },
    "List": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "post /lists/{listDbId}/items",
                        "get /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "put /lists/{listDbId}"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A List represents a collection of other BrAPI data objects. Typically these are custom lists generated by a user to keep track of interesting data. For example, a user might build a List of Germplasm that they have manually marked for further study."
            }
        ]
    },
    "Location": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A geographic Location on earth. This is ussually used to describe the general area where an experiment took place. For example, a natural site, an experimental field, a greenhouse, a phenotyping facility, etc."
            }
        ]
    },
    "MarkerPosition": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A MarkerPosition describes a particular genetic marker at a specific position on a GenomeMap. A collection of MarkerPostions make up the data to represent a full GenomeMap."
            }
        ]
    },
    "PUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.experimentalDesign"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-23) Type of experimental design - Type of experimental  design of the study, in the form of an accession number from the Crop Ontology."
            },
            {
                "context": {
                    "classes": [
                        "Study.growthFacility"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-27) Type of growth facility - Type of growth facility in which the study was carried out, in the form of an accession number from the Crop Ontology."
            }
        ]
    },
    "Person": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A generic object used to maintain the metadata needed to describe a human. The Person might be a software user, a field technician, or a primary contact for a Program."
            }
        ]
    },
    "Plate": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "post /plates",
                        "post /search/plates",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A Plate represents the metadata for a collection of Samples. The physical Plate being represented might be a plastic tray full of Samples, or a group of Samples stored in individual containers ie bags, test tubes, etc. Whatever the container is, the Samples in a Plate should be related by the same physical space, though they may or may not be related as part of the same experiment or analysis."
            }
        ]
    },
    "Program": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A BrAPI Program represents the high level organization or group who is responsible for conducting trials and studies. Things like Breeding Programs and Funded Projects are considered BrAPI Programs. A Program can contain multiple Trials. A Trial can contain multiple Studies."
            }
        ]
    },
    "Season": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Season"
                    ],
                    "paths": [
                        "put /seasons/{seasonDbId}",
                        "post /seasons",
                        "get /seasons/{seasonDbId}",
                        "get /seasons"
                    ],
                    "tags": [
                        "Seasons"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A Season defines a period in time. A Season is made of two parts; (1) the primary year and (2) a term which defines a segment of the year. This term could be a traditional season, like \"Spring\" or \"Summer\", or this term could be a month, like \"May\" or \"June\", or this could be an arbitrary season name which is meaningful to the breeding Program like \"PlantingTime_3\" or \"Season E\"."
            }
        ]
    },
    "Study": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A Study represents an experiment that has taken place at a single location. The Study contains metadata about the parameters and design of the experiment. It can also be used to group results and data sets generated from the experiment. A Trial can represent a collection of one or more Studies."
            }
        ]
    },
    "Trial": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "class"
                    ]
                },
                "definition": "A Trial represents a collection of Study objects, and the metadata associated with that collection. A Trial could represent a multi-location experiment, and could contain information related to publications and data licensing."
            }
        ]
    },
    "URL": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.ontologyReference.documentationLinks",
                        "Variable.method.ontologyReference.documentationLinks",
                        "Variable.trait.ontologyReference.documentationLinks",
                        "Variable.scale.ontologyReference.documentationLinks"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /scales/{scaleDbId}",
                        "post /vendor/plates",
                        "get /attributes",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "get /vendor/plates/{submissionId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Traits",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Vendor",
                        "Methods",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "abbreviation": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods",
                        "get /breedingmethods/{breedingMethodDbId}"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "an abbreviation for the name of this breeding method"
            },
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An abbreviation which represents this location"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by program abbreviation. Exact match."
            },
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An abbreviation which represents this program"
            }
        ]
    },
    "abbreviations": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An abbreviation which represents this location"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An abbreviation of a program to search for"
            }
        ]
    },
    "accession": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /referencesets"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "If set, return the reference sets for which the `accession` matches this string (case-sensitive, exact match)."
            }
        ]
    },
    "accessionNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (ACCENAME) 11. Either a registered or other designation given to the material received, other than the donors accession number (23) or collecting number (3). First letter uppercase. Multiple names are separated by a semicolon without space."
            }
        ]
    },
    "accessionNumber": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Unique identifiers for accessions within a genebank"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection\n\nMCPD (v2.1) (ACCENUMB) 2. This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection (e.g. \"PI 113869\")."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (ACCENUMB) 2. This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection (e.g. \"PI 113869\")."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for an accession within a genebank"
            }
        ]
    },
    "accessionNumbers": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List unique identifiers for accessions within a genebank"
            }
        ]
    },
    "accessions": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If specified, return the references for which the `accession` matches this string (case-sensitive, exact match)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If set, return the reference sets for which the `accession` matches this string (case-sensitive, exact match)."
            }
        ]
    },
    "acquisitionDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date this germplasm was acquired by the genebank \n\nMCPD (v2.1) (ACQDATE) 12. Date on which the accession entered the collection [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero]."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (ACQDATE) 12. Date on which the accession entered the collection [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero]."
            }
        ]
    },
    "acquisitionSourceCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLSRC) 21. The coding scheme proposed can be used at 2 different levels of detail: either by using the general codes (in bold-face) such as 10, 20, 30, 40, etc., or by using the more specific codes, such as 11, 12, etc. \n\n10) Wild habitat \n11) Forest or woodland \n12) Shrubland \n13) Grassland \n14) Desert or tundra \n15) Aquatic habitat \n20) Farm or cultivated habitat \n21) Field \n22) Orchard \n23) Backyard, kitchen or home garden (urban, peri-urban or rural) \n24) Fallow land \n25) Pasture \n26) Farm store \n27) Threshing floor \n28) Park \n30) Market or shop \n40) Institute, Experimental station, Research organization, Genebank \n50) Seed company \n60) Weedy, disturbed or ruderal habitat \n61) Roadside \n62) Field margin \n99) Other (Elaborate in REMARKS field)"
            }
        ]
    },
    "active": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Is this study currently active"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Is this trail currently active"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Is this trial currently active"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies",
                        "get /trials"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter active status true/false."
            }
        ]
    },
    "additionalInfo": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method",
                        "Study",
                        "GenomeMap",
                        "Person",
                        "List",
                        "Location",
                        "CallSet",
                        "Trial",
                        "MarkerPosition",
                        "Variable.trait",
                        "Plate",
                        "Variable.scale",
                        "Call",
                        "Program",
                        "Variable"
                    ],
                    "paths": [
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "put /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "post /observations",
                        "put /plates",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /vendor/orders/{orderId}/results",
                        "post /plates",
                        "post /search/studies",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /events",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "get /studies/{studyDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "get /variantsets/{variantSetDbId}",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "put /scales/{scaleDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /search/germplasm",
                        "post /attributevalues",
                        "get /callsets",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /calls",
                        "get /lists",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "get /crossingprojects",
                        "put /observations",
                        "get /seedlots/transactions",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /methods/{methodDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "post /crosses",
                        "get /observations/{observationDbId}",
                        "post /lists",
                        "put /plannedcrosses",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Additional arbitrary info"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Additional arbitrary information specific to a particular Vendor. Look for the Vendors specific API documentation for more details"
            }
        ]
    },
    "alternateBases": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The bases that appear instead of the reference bases. Multiple alternate alleles are possible."
            }
        ]
    },
    "alternateIDs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (OTHERNUMB) 24. Any other identifiers known to exist in other collections for this accession. Use the following format: INSTCODE:ACCENUMB;INSTCODE:identifier;INSTCODE and identifier are separated by a colon without space. Pairs of INSTCODE and identifier are separated by a semicolon without space. When the institute is not known, the identifier should be preceded by a colon. "
            }
        ]
    },
    "alternate_bases": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `alternateBases`. Github issue number #549\n<br>The bases that appear instead of the reference bases. Multiple alternate alleles are possible."
            }
        ]
    },
    "alternativeAbbreviations": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention"
            }
        ]
    },
    "altitudeMax": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The maximum altitude to search for"
            }
        ]
    },
    "altitudeMin": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The minimum altitude to search for"
            }
        ]
    },
    "amount": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Current balance of seeds in this lot. Could be a count (seeds, bulbs, etc) or a weight (kg of seed)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The amount of units being transfered. Could be a count (seeds, bulbs, etc) or a weight (kg of seed)."
            }
        ]
    },
    "analysis": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Set of Analysis descriptors for this VariantSet"
            }
        ]
    },
    "analysisDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique identifier for this analysis description"
            }
        ]
    },
    "analysisName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for this analysis"
            }
        ]
    },
    "ancestralData": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (ANCEST) 20. Information about either pedigree or other description of ancestral information (e.g. parent variety in case of mutant or selection). For example a pedigree 'Hanna/7*Atlas//Turk/8*Atlas' or a description 'mutation found in Hanna', 'selection from Irene' or 'cross involving amongst others Hanna and Irene'."
            }
        ]
    },
    "assemblyPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "If set, return the reference sets for which the `assemblyId` matches this string (case-sensitive, exact match)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The remaining information is about the source of the sequences Public id of this reference set, such as `GRCH_37`."
            }
        ]
    },
    "assemblyPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If set, return the reference sets for which the `assemblyId` matches this string (case-sensitive, exact match)."
            }
        ]
    },
    "attribute": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\""
            }
        ]
    },
    "attributeCategories": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "General category for the attribute. very similar to Trait class."
            }
        ]
    },
    "attributeCategory": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The general category for the attribute. very similar to Trait class."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /attributes",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "General category for the attribute. very similar to Trait class."
            }
        ]
    },
    "attributeDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /attributevalues",
                        "put /attributes/{attributeDbId}",
                        "get /attributes/{attributeDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique id for an attribute"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /attributes",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "post /attributevalues",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies this attribute within the given database server"
            }
        ]
    },
    "attributeDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of Germplasm Attribute IDs to search for"
            }
        ]
    },
    "attributeDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /attributes",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable description of this attribute"
            }
        ]
    },
    "attributeName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /attributevalues",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name for an attribute"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /attributes",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "post /attributevalues",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for this attribute"
            }
        ]
    },
    "attributeNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of human readable Germplasm Attribute names to search for"
            }
        ]
    },
    "attributePUI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /attributes",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of an Attribute, usually in the form of a URI"
            },
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Trait Attribute, usually in the form of a URI\n<br/>A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\""
            }
        ]
    },
    "attributePUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes"
                    ],
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of an Attribute, usually in the form of a URI"
            }
        ]
    },
    "attributeValueDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "put /attributevalues/{attributeValueDbId}"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique id for an attribute value"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /attributevalues/{attributeValueDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "post /attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies this attribute value within the given database server"
            }
        ]
    },
    "attributeValueDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of Germplasm Attribute Value IDs to search for"
            }
        ]
    },
    "authors": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /ontologies",
                        "get /ontologies/{ontologyDbId}",
                        "get /ontologies",
                        "put /ontologies/{ontologyDbId}"
                    ],
                    "tags": [
                        "Ontologies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology's list of authors (no specific format)"
            }
        ]
    },
    "availableFormats": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "When the data for a VariantSet is retrieved, it can be retrieved in a variety of data formats and file formats. \n<br/>'dataFormat' defines the structure of the data within a file (ie DartSeq, VCF, Hapmap, tabular, etc)\n<br/>'fileFormat' defines the MIME type of the file (ie text/csv, application/excel, application/zip). This should also be reflected in the Accept and ContentType HTTP headers for every relevant request and response."
            }
        ]
    },
    "bibliographicalReference": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Bibliographical reference describing the method.\n<br/>MIAPPE V1.1 (DM-91) Reference associated to the method - URI/DOI of reference describing the method."
            }
        ]
    },
    "binomialName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The full binomial name (scientific name) to identify a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The full binomial name (scientific name) of a germplasm"
            }
        ]
    },
    "binomialNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of the full binomial name (scientific name) to identify a germplasm"
            }
        ]
    },
    "biologicalStatusOfAccessionCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "post /search/germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (SAMPSTAT) 19. The coding scheme proposed can be used at 3 different levels of detail: either by using the general codes such as 100, 200, 300, 400, or by using the more specific codes such as 110, 120, etc. \n\n100) Wild \n110) Natural \n120) Semi-natural/wild \n130) Semi-natural/sown \n200) Weedy \n300) Traditional cultivar/landrace \n400) Breeding/research material \n410) Breeders line \n411) Synthetic population \n412) Hybrid \n413) Founder stock/base population \n414) Inbred line (parent of hybrid cultivar) \n415) Segregating population \n416) Clonal selection \n420) Genetic stock \n421) Mutant (e.g. induced/insertion mutants, tilling populations) \n422) Cytogenetic stocks (e.g. chromosome addition/substitution, aneuploids,  amphiploids) \n423) Other genetic stocks (e.g. mapping populations) \n500) Advanced or improved cultivar (conventional breeding methods) \n600) GMO (by genetic engineering) \n999) Other (Elaborate in REMARKS field)"
            }
        ]
    },
    "biologicalStatusOfAccessionDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Supplemental text description for 'biologicalStatusOfAccessionCode'"
            }
        ]
    },
    "breedingInstitutes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "breedingMethodDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods",
                        "get /breedingmethods/{breedingMethodDbId}"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for this breeding method"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Internal database identifier for a breeding method"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "put /pedigree",
                        "post /search/pedigree",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for the breeding method used to create this germplasm"
            }
        ]
    },
    "breedingMethodName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "get /breedingmethods",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "human readable name of the breeding method"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the breeding method used to create this germplasm"
            }
        ]
    },
    "callSetCount": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of CallSets included in this VariantSet"
            }
        ]
    },
    "callSetDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /calls",
                        "get /allelematrix",
                        "get /callsets/{callSetDbId}/calls",
                        "get /callsets/{callSetDbId}",
                        "get /callsets"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Calls",
                        "Call Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `CallSet` within the given database server"
            },
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID of the call set this variant call belongs to.\n\nIf this field is not present, the ordering of the call sets from a `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match the ordering of the calls on this `Variant`. The number of results will also be the same."
            },
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a CallSet within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID of the `CallSet` to be retrieved."
            }
        ]
    },
    "callSetDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of unique identifiers for the CallSets contained in the matrix response. This array should match the ordering for columns in the matrix. A CallSet is a unique combination of a Sample and a sequencing event. CallSets often have a 1-to-1 relationship with Samples, but this is not always the case."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix",
                        "post /search/callsets",
                        "post /search/calls"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Calls",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `CallSets` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Parameter unnecessary. Github issue number #474 \n<br/>Only return variant calls which belong to call sets with these IDs. If unspecified, return all variants and no variant call objects."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a CallSet"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /variantsets/extract"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The CallSet to search."
            }
        ]
    },
    "callSetName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the call set this variant call belongs to. If this field is not present, the ordering of the call sets from a `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match the ordering of the calls on this `Variant`. The number of results will also be the same."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /callsets"
                    ],
                    "tags": [
                        "Call Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name of a `CallSet`."
            },
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name which identifies a germplasm within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name of the `CallSet` to be retrieved."
            }
        ]
    },
    "callSetNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/callsets"
                    ],
                    "tags": [
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of human readable names associated with `CallSets`"
            }
        ]
    },
    "calls": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Array of available calls on this server"
            }
        ]
    },
    "categories": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of possible values with optional labels"
            }
        ]
    },
    "ciend": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Similar to \"cipos\", but for the variant's end position (which is derived from start + svlen)."
            }
        ]
    },
    "cipos": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "In the case of structural variants, start and end of the variant may not\nbe known with an exact base position. \"cipos\" provides an interval with\nhigh confidence for the start position. The interval is provided by 0 or\n2 signed integers which are added to the start position.\nBased on the use in VCF v4.2"
            }
        ]
    },
    "clientId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the correct billing and contact info."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the contract, billing, and contact info."
            }
        ]
    },
    "clientPlateBarcode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "(Optional) The value of the bar code attached to this plate"
            }
        ]
    },
    "clientPlateId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies this plate to the client making the request"
            }
        ]
    },
    "clientSampleBarCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "(Optional) The value of the bar code attached to this sample"
            }
        ]
    },
    "clientSampleId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies this sample to the client making the request"
            }
        ]
    },
    "clientSampleIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/results"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The list of sampleDbIds included in the file"
            }
        ]
    },
    "code": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The shortened code name of an event parameter\n<br>ICASA \"Code_Display\""
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The 2 digit code representing the type of storage this germplasm is kept in at a genebank. \n\nMCPD (v2.1) (STORAGE) 26. If germplasm is maintained under different types of storage, multiple choices are allowed, separated by a semicolon (e.g. 20;30). (Refer to FAO/IPGRI Genebank Standards 1994 for details on storage type.) \n\n10) Seed collection \n11) Short term \n12) Medium term \n13) Long term \n20) Field collection \n30) In vitro collection \n40) Cryo-preserved collection \n50) DNA collection \n99) Other (elaborate in REMARKS field)"
            }
        ]
    },
    "collectingDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero]."
            }
        ]
    },
    "collectingInfo": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Information about the collection of this germplasm"
            }
        ]
    },
    "collectingInstitutes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Institutes which collected the sample"
            }
        ]
    },
    "collectingMissionIdentifier": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission used by the Collecting Institute (4 or 4.1) (e.g. \"CIATFOR_052\", \"CN_426\")."
            }
        ]
    },
    "collectingNumber": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the collector(s) of the sample, normally composed of the name or initials of the collector(s) followed by a number (e.g. \"ab109909\"). This identifier is essential for identifying duplicates held in different collections."
            }
        ]
    },
    "collectingSite": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Information about the location where the sample was collected"
            }
        ]
    },
    "collection": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "A specific panel/collection/population name this germplasm belongs to."
            }
        ]
    },
    "collections": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A specific panel/collection/population name this germplasm belongs to."
            }
        ]
    },
    "collector": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name or identifier of the entity which collected the observation"
            }
        ]
    },
    "column": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Column identifier for this `Sample` location in the `Plate`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Column identifier for this samples location in the plate"
            }
        ]
    },
    "comments": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Additional comments about a `GenomeMap`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Generic comments about this sample for the vendor"
            }
        ]
    },
    "commonCropName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets",
                        "get /observations",
                        "get /pedigree",
                        "get /images",
                        "get /methods",
                        "get /lists",
                        "get /references",
                        "get /crossingprojects",
                        "get /observationunits",
                        "get /seedlots/transactions",
                        "get /samples",
                        "get /people",
                        "get /maps",
                        "get /locations",
                        "get /seedlots",
                        "get /crosses",
                        "get /variables",
                        "get /studies",
                        "get /programs",
                        "get /germplasm",
                        "get /plates",
                        "get /traits",
                        "get /attributevalues",
                        "get /trials",
                        "get /referencesets",
                        "get /plannedcrosses",
                        "get /scales",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The BrAPI Common Crop Name is the simple, generalized, widely accepted name of the organism being researched. It is most often used in multi-crop systems where digital resources need to be divided at a high level. Things like 'Maize', 'Wheat', and 'Rice' are examples of common crop names.\n\nUse this parameter to only return results associated with the given crop. \n\nUse `GET /commoncropnames` to find the list of available crops on a server."
            },
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Crop name (examples: \"Maize\", \"Wheat\")"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the common name of a crop (for multi-crop systems)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Common name for the crop \n\nMCPD (v2.1) (CROPNAME) 10. Common name of the crop. Example: \"malting barley\", \"mas\"."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (CROPNAME) 10. Common name of the crop. Example: \"malting barley\", \"mas\". "
            },
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The common name of the `Crop`"
            },
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Common name for the crop which this program is for"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /references",
                        "post /search/referencesets",
                        "get /referencesets",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Common name for the crop"
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Common name for the crop associated with this study"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Common name for the crop associated with this trial"
            }
        ]
    },
    "commonCropNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/studies",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The BrAPI Common Crop Name is the simple, generalized, widely accepted name of the organism being researched. It is most often used in multi-crop systems where digital resources need to be divided at a high level. Things like 'Maize', 'Wheat', and 'Rice' are examples of common crop names.\n\nUse this parameter to only return results associated with the given crops. \n\nUse `GET /commoncropnames` to find the list of available crops on a server."
            }
        ]
    },
    "concentration": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A value with units"
            }
        ]
    },
    "contactDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.contacts",
                        "Trial.contacts"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /search/trials",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies this contact\n\nMIAPPE V1.1 (DM-33) Person ID - An identifier for the data submitter. If that submitter is an individual, ORCID identifiers are recommended."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Contact entities associated with this trial"
            }
        ]
    },
    "contactDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of contact entities associated with this trial"
            }
        ]
    },
    "contactEmail": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A contact email address for this server management"
            }
        ]
    },
    "contacts": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of contact entities associated with this study"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of contact entities associated with this trial"
            }
        ]
    },
    "contentMixture": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The mixture of germplasm present in the seed lot.\n<br/>\nIf this seed lot only contains a single germplasm, the response should contain the name \nand DbId of that germplasm with a mixturePercentage value of 100\n<br/>\nIf the seed lot contains a mixture of different germplasm, the response should contain \nthe name and DbId every germplasm present. The mixturePercentage field should contain \nthe ratio of each germplasm in the total mixture. All of the mixturePercentage values \nin this array should sum to equal 100."
            }
        ]
    },
    "contentType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter the list of endpoints based on the response content type."
            }
        ]
    },
    "contentTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The possible content types returned by the service endpoint"
            }
        ]
    },
    "contextOfUse": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Indication of how trait is routinely used. (examples: [\"Trial evaluation\", \"Nursery evaluation\"])"
            }
        ]
    },
    "coordinateDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Describes the precision and landmarks of the coordinate values used for this location. (ex. the site, the nearest town, a 10 kilometers radius circle, +/- 20 meters, etc)"
            }
        ]
    },
    "coordinateUncertainty": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /locations",
                        "get /germplasm/{germplasmDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /germplasm",
                        "put /locations/{locationDbId}",
                        "post /search/locations",
                        "put /germplasm/{germplasmDbId}",
                        "post /locations",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm",
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Uncertainty associated with the coordinates in meters. Leave the value empty if the uncertainty is unknown."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COORDUNCERT) 15.5 Uncertainty associated with the coordinates in metres. Leave the value empty if the uncertainty is unknown."
            }
        ]
    },
    "coordinates": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /locations",
                        "get /germplasm/{germplasmDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /germplasm",
                        "put /locations/{locationDbId}",
                        "post /search/locations",
                        "put /germplasm/{germplasmDbId}",
                        "post /locations",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm",
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.\n\nCopied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A GeoJSON Polygon which describes an area to search for other GeoJSON objects. All contained Points and intersecting Polygons should be returned as search results. \n\nAll coordinates are decimal values on the WGS84 geographic coordinate reference system."
            }
        ]
    },
    "copyright": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The copyright information of this image. Example 'Copyright 2018 Bob Robertson'"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /ontologies",
                        "get /ontologies/{ontologyDbId}",
                        "get /ontologies",
                        "put /ontologies/{ontologyDbId}"
                    ],
                    "tags": [
                        "Ontologies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology copyright"
            }
        ]
    },
    "countryCode": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec\n<br/> MIAPPE V1.1 (DM-17) Geographic location (country) - The country where the experiment took place, either as a full name or preferably as a 2-letter code.'"
            }
        ]
    },
    "countryCodes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec"
            }
        ]
    },
    "countryName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The full name of the country where this location is\n<br/> MIAPPE V1.1 (DM-17) Geographic location (country) - The country where the experiment took place, either as a full name or preferably as a 2-letter code."
            }
        ]
    },
    "countryNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The full name of the country to search for"
            }
        ]
    },
    "countryOfOrigin": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the country in which the sample was originally collected (e.g. landrace, crop wild relative, farmers\" variety), bred or selected (breeding lines, GMOs, segregating populations, hybrids, modern cultivars, etc.). Note: Descriptors 14 to 16 below should be completed accordingly only if it was \"collected\"."
            }
        ]
    },
    "countryOfOriginCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "3-letter ISO 3166-1 code of the country in which the sample was originally collected \n\nMCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the country in which the sample was originally collected (e.g. landrace, crop wild relative, farmers variety), bred or selected (breeding lines, GMOs, segregating populations, hybrids, modern cultivars, etc.). Note- Descriptors 14 to 16 below should be completed accordingly only if it was \"collected\"."
            }
        ]
    },
    "created": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date this call set was created"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The timestamp when this variant was created."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The time at which this record was created, in ISO 8601 format."
            }
        ]
    },
    "createdDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The time stamp for when this seed lot was created"
            }
        ]
    },
    "crossAttributeName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name of a cross attribute"
            }
        ]
    },
    "crossAttributeValue": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the value of a cross attribute"
            }
        ]
    },
    "crossAttributes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Set of custom attributes associated with a cross"
            }
        ]
    },
    "crossDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "get /crosses",
                        "get /seedlots/transactions"
                    ],
                    "tags": [
                        "Crosses",
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Cross with this unique id"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /crosses",
                        "get /crosses",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /crosses"
                    ],
                    "tags": [
                        "Crosses",
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for a cross"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique DbId for a cross contained in this seed lot"
            }
        ]
    },
    "crossName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "get /crosses",
                        "get /seedlots/transactions"
                    ],
                    "tags": [
                        "Crosses",
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Cross with this human readable name"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /crosses",
                        "get /crosses",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /crosses"
                    ],
                    "tags": [
                        "Crosses",
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name for a cross"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name for a cross contained in this seed lot"
            }
        ]
    },
    "crossType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the type of cross"
            }
        ]
    },
    "crossingProjectDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plannedcrosses",
                        "get /crosses",
                        "get /crossingprojects",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Crossing Projects with this unique id"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for a crossing project"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a crossing project"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The crossing project used to generate this germplasm"
            }
        ]
    },
    "crossingProjectDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the description for a crossing project"
            }
        ]
    },
    "crossingProjectName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "get /crossingprojects",
                        "get /plannedcrosses",
                        "post /crossingprojects",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The human readable name for a crossing project"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name for a crossing project"
            }
        ]
    },
    "crossingYear": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The year the parents were originally crossed"
            }
        ]
    },
    "culturalPractices": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-28) Cultural practices - General description of the cultural practices of the study."
            }
        ]
    },
    "currentPage": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The index number for the returned page of data. This should always match the requested page number or the default page (0)."
            }
        ]
    },
    "currentPageToken": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/variants/{searchResultsDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /variants",
                        "post /search/variants",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `page`. Github issue number #451 \n<br>The string token used to query the current page of data."
            }
        ]
    },
    "data": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /callsets/{callSetDbId}/calls",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "post /observations",
                        "put /plates",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "get /markerpositions",
                        "get /scales",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /vendor/orders/{orderId}/results",
                        "post /plates",
                        "post /search/studies",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /germplasm",
                        "get /plates",
                        "post /seasons",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /events",
                        "post /variables",
                        "get /attributevalues",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "get /vendor/orders/{orderId}/plates",
                        "get /variantsets",
                        "post /observationunits",
                        "post /locations",
                        "post /search/calls",
                        "post /search/germplasm",
                        "post /attributevalues",
                        "get /callsets",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /calls",
                        "get /lists",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "get /crossingprojects",
                        "put /observations",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "get /seasons",
                        "post /programs",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /calls",
                        "post /attributes",
                        "get /ontologies",
                        "post /traits",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /breedingmethods",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "post /search/programs",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "post /germplasm",
                        "post /pedigree",
                        "get /methods",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "post /search/lists",
                        "post /methods",
                        "post /trials",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /referencesets",
                        "post /search/pedigree",
                        "get /search/callsets/{searchResultsDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /commoncropnames"
                    ],
                    "tags": [
                        "Common Crop Names"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "array of crop names available on the server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "post /images",
                        "post /search/images",
                        "get /search/images/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Array of image metadata"
            },
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "post /lists/{listDbId}/items",
                        "get /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "put /lists/{listDbId}"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The DbIds of other objects contained in this List"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Matrix of observation data recorded for different observation variables across different observation units"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /people",
                        "get /search/people/{searchResultsDbId}",
                        "get /people",
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Array of people"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studytypes"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the list of all study types available in this server."
            }
        ]
    },
    "dataFormat": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The structure of the data within a file. For example - VCF, table, image archive, multispectral image archives in EDAM ontology (used in Galaxy)\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "dataFormat defines the structure of the data within a file (ie DartSeq, VCF, Hapmap, tabular, etc)"
            }
        ]
    },
    "dataLinks": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of links to extra data files associated with this study. Extra data could include notes, images, and reference data."
            }
        ]
    },
    "dataMatrices": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The 'dataMatrices' are an array of matrix objects that hold the allele data and associated metadata. Each matrix should be the same size and orientation, aligned with the \"callSetDbIds\" as columns and the \"variantDbIds\" as rows."
            }
        ]
    },
    "dataMatrix": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.dataMatrices"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The two dimensional array of data, providing the allele matrix or an additional layer of metadata associated with each genotype value. Each matrix should be the same size and orientation, aligned with the \"callSetDbIds\" as columns and the \"variantDbIds\" as rows."
            }
        ]
    },
    "dataMatrixAbbreviation": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.dataMatrices"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The abbreviated code of the field represented in this data matrix. These codes should match the VCF standard when possible and the key word \"GT\" is reserved for the allele matrix. Examples of other metadata matrices include: \"GQ\", \"RD\", and \"HQ\"\n<br> This maps to a FORMAT field in the VCF file standard."
            }
        ]
    },
    "dataMatrixAbbreviations": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "\"dataMatrixAbbreviations\" is a comma seperated list of abbreviations (ie 'GT, RD' etc). This list controls which data matrices are returned in the response.\n<br> This maps to a FORMAT field in the VCF file standard."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "`dataMatrixAbbreviations` is a comma seperated list of abbreviations (ie 'GT', 'RD' etc). This list controls which data matrices are returned in the response."
            }
        ]
    },
    "dataMatrixName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.dataMatrices"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the field represented in this data matrix. The key word \"Genotype\" is reserved for the allele matrix. Examples of other metadata matrices include: \"Genotype Quality\", \"Read Depth\", and \"Haplotype Quality\"\n<br> This maps to a FORMAT field in the VCF file standard."
            }
        ]
    },
    "dataMatrixNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "\"dataMatrixNames\" is a comma seperated list of names (ie 'Genotype, Read Depth' etc). This list controls which data matrices are returned in the response.\n<br> This maps to a FORMAT field in the VCF file standard."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "`dataMatrixNames` is a list of names (ie 'Genotype', 'Read Depth' etc). This list controls which data matrices are returned in the response."
            }
        ]
    },
    "dataType": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.dataMatrices"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of field represented in this data matrix. This is intended to help parse the data out of JSON."
            },
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "<p>Class of the scale, entries can be</p>\n<p>\"Code\" -  This scale class is exceptionally used to express complex traits. Code is a nominal scale that combines the expressions of the different traits composing the complex trait. For example a severity trait might be expressed by a 2 digit and 2 character code. The first 2 digits are the percentage of the plant covered by a fungus and the 2 characters refer to the delay in development, e.g. \"75VD\" means \"75 %\" of the plant is infected and the plant is very delayed.</p>\n<p>\"Date\" - The date class is for events expressed in a time format, See ISO 8601</p>\n<p>\"Duration\" - The Duration class is for time elapsed between two events expressed in a time format, e.g. days, hours, months</p>\n<p>\"Nominal\" - Categorical scale that can take one of a limited and fixed number of categories. There is no intrinsic ordering to the categories</p>\n<p>\"Numerical\" - Numerical scales express the trait with real numbers. The numerical scale defines the unit e.g. centimeter, ton per hectare, branches</p>\n<p>\"Ordinal\" - Ordinal scales are scales composed of ordered categories</p>\n<p>\"Text\" - A free text is used to express the trait.</p>"
            },
            {
                "context": {
                    "classes": [
                        "Call.genotypeMetadata"
                    ],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /calls",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "post /search/variantsets",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of field represented in this Genotype Field. This is intended to help parse the data out of JSON."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `contentType`. Github issue number #443\n<br>The data format supported by the call."
            }
        ]
    },
    "dataTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of scale data types to filter search results"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `contentTypes`. Github issue number #443 \n<br/>The possible data formats returned by the available call "
            }
        ]
    },
    "datafiles": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The datafiles contains a list of file URLs and metadata. \nThese files contain additional information related to the returned object and can be retrieved by a subsequent call. \nThis could be a supplementary data file, an informational file, the uploaded file where the data originated from, a generated file representing the whole dataset in a particular format, or any other related file. "
            }
        ]
    },
    "datasetAuthorships": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "License and citation information for the data in this trial"
            }
        ]
    },
    "datasetPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial.datasetAuthorships"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "date": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `eventDateRange.discreteDates`. Github issue number #440             \n<br>A list of dates when the event occurred\n<br>MIAPPE V1.1 (DM-68) Event date - Date and time of the event."
            }
        ]
    },
    "dateCreated": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Timestamp when the entity was first created"
            }
        ]
    },
    "dateCreatedRangeEnd": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "dateCreatedRangeStart": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "dateModified": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Timestamp when the entity was last updated"
            }
        ]
    },
    "dateModifiedRangeEnd": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "dateModifiedRangeStart": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "dateRangeEnd": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter based on an Date Range"
            }
        ]
    },
    "dateRangeStart": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter based on an Date Range"
            }
        ]
    },
    "decimalPlaces": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "For numerical, number of decimal places to be reported"
            }
        ]
    },
    "defaultDisplayName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "put /pedigree",
                        "post /search/pedigree",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable name used for display purposes"
            }
        ]
    },
    "defaultValue": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Variable default value. (examples: \"red\", \"2.3\", etc.)"
            }
        ]
    },
    "description": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Method description\n<br/>MIAPPE V1.1 (DM-90) Method description - Textual description of the method, which may extend a method defined in an external reference with specific parameters, e.g. growth stage, inoculation precise organ (leaf number)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods",
                        "get /breedingmethods/{breedingMethodDbId}"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "human readable description of the breeding method"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable description of this event parameter. This description is usually associated with the 'name' and 'code' of an event parameter."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A supplemental text description of the storage type"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable description of an image."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /ontologies",
                        "get /ontologies/{ontologyDbId}",
                        "get /ontologies",
                        "put /ontologies/{ontologyDbId}"
                    ],
                    "tags": [
                        "Ontologies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable description of Ontology"
            },
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "description of this person"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Optional free text description of this reference set."
            },
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The general description of this data link\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file."
            },
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human-readable value of the environment parameter (defined above) constant within the experiment"
            },
            {
                "context": {
                    "classes": [
                        "Study.experimentalDesign"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-22) Description of the experimental design - Short description of the experimental design, possibly including statistical design. In specific cases, e.g. legacy datasets or data computed from several studies, the experimental design can be \"unknown\"/\"NA\", \"aggregated/reduced data\", or simply 'none'."
            },
            {
                "context": {
                    "classes": [
                        "Study.growthFacility"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-26) Description of growth facility - Short description of the facility in which the study was carried out."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable description of the analysis"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "descriptiveOntologyTerm": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "A descriptive term associated with an image"
            }
        ]
    },
    "descriptiveOntologyTerms": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of terms to formally describe the image to search for. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of terms to formally describe the image. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL."
            }
        ]
    },
    "determinedDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /attributevalues/{attributeValueDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "post /attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date the value of this attribute was determined for a given germplasm"
            }
        ]
    },
    "dimension": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.pagination"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The dimension of the matrix being paginated"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the dimension of the matrix being paginated"
            }
        ]
    },
    "dimensionCallSetPage": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The requested page number for the CallSet dimension of the matrix"
            }
        ]
    },
    "dimensionCallSetPageSize": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The requested page size for the CallSet dimension of the matrix"
            }
        ]
    },
    "dimensionVariantPage": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The requested page number for the Variant dimension of the matrix"
            }
        ]
    },
    "dimensionVariantPageSize": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The requested page size for the Variant dimension of the matrix"
            }
        ]
    },
    "discreteDates": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of dates when the event occurred\n<br/>MIAPPE V1.1 (DM-68) Event date - Date and time of the event."
            }
        ]
    },
    "documentationLinks": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method.ontologyReference",
                        "Variable.ontologyReference",
                        "Variable.trait.ontologyReference",
                        "Variable.scale.ontologyReference"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /scales/{scaleDbId}",
                        "post /vendor/plates",
                        "get /attributes",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "get /vendor/plates/{submissionId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Traits",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Vendor",
                        "Methods",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "links to various ontology documentation"
            }
        ]
    },
    "documentationURL": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study",
                        "GenomeMap",
                        "Trial",
                        "Location",
                        "Program",
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /search/programs",
                        "get /ontologies/{ontologyDbId}",
                        "put /trials/{trialDbId}",
                        "post /locations",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "post /search/germplasm",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "post /programs",
                        "get /maps/{mapDbId}",
                        "get /locations/{locationDbId}",
                        "get /maps",
                        "get /germplasm/{germplasmDbId}",
                        "get /locations",
                        "get /search/programs/{searchResultsDbId}",
                        "post /trials",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "get /studies",
                        "get /programs",
                        "get /programs/{programDbId}",
                        "post /search/attributes",
                        "get /germplasm",
                        "post /attributes",
                        "post /search/variables",
                        "get /ontologies",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /search/trials/{searchResultsDbId}",
                        "get /studies/{studyDbId}",
                        "get /serverinfo",
                        "get /trials",
                        "put /locations/{locationDbId}",
                        "post /search/locations",
                        "put /studies/{studyDbId}",
                        "get /variables/{observationVariableDbId}",
                        "put /programs/{programDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Germplasm",
                        "Germplasm Attributes",
                        "Server Info",
                        "Programs",
                        "Genome Maps",
                        "Studies",
                        "Observation Variables",
                        "Ontologies",
                        "Locations",
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A URL to the human readable documentation of this object"
            }
        ]
    },
    "donorAccessionNumber": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The accession number assigned by the donor\n                              \nMCPD (v2.1) (DONORNUMB) 23. Identifier assigned to an accession by the donor. Follows ACCENUMB standard."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DONORNUMB) 23. Identifier assigned to an accession by the donor. Follows ACCENUMB standard."
            }
        ]
    },
    "donorAccessionPui": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "PUI (DOI mostly) of the accession in the donor system."
            }
        ]
    },
    "donorInfo": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Information about the donor"
            }
        ]
    },
    "donorInstitute": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "donorInstituteCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The institute code for the donor institute\n<br/>MCPD (v2.1) (DONORCODE) 22. FAO WIEWS code of the donor institute. Follows INSTCODE standard."
            }
        ]
    },
    "donors": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of donor institutes"
            }
        ]
    },
    "elevation": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (ELEVATION) 16. Elevation of collecting site expressed in metres above sea level. Negative values are allowed."
            }
        ]
    },
    "email": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.contacts",
                        "Trial.contacts"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /search/trials",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The contacts email address\n\nMIAPPE V1.1 (DM-32) Person email - The electronic mail address of the person."
            }
        ]
    },
    "emailAddress": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "email address for this person"
            }
        ]
    },
    "emailAddresses": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "email address for this person"
            }
        ]
    },
    "end": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The end position (0-based, exclusive) of this query. Defaults to the length of this `Reference`."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The end of the window (0-based, exclusive) for which overlapping variants should be returned."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "This field is optional and may be ignored if there is no relevant map or reference to be associated with.\n<br>The end position (exclusive), resulting in [start, end) closed-open interval. This is typically calculated \nby `start + referenceBases.length`."
            }
        ]
    },
    "endDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The end of a continous or regularly repetitive event\n<br/>MIAPPE V1.1 (DM-68) Event date - Date and time of the event."
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date the study ends\n\nMIAPPE V1.1 (DM-15) End date of study - Date and, if relevant, time when the experiment ended"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date this trial ends"
            }
        ]
    },
    "entity": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\""
            }
        ]
    },
    "entityPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Trait Entity, usually in the form of a URI\n<br/>A Trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the Entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\" "
            }
        ]
    },
    "entryType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of entry for this observation unit. ex. \"CHECK\", \"TEST\", \"FILLER\""
            }
        ]
    },
    "environmentParameters": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Environmental parameters that were kept constant throughout the study and did not change between observation units.\n\nMIAPPE V1.1 (DM-57) Environment - Environmental parameters that were kept constant throughout the study and did not change between observation units or assays. Environment characteristics that vary over time, i.e. environmental variables, should be recorded as Observed Variables (see below)."
            }
        ]
    },
    "environmentType": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Describes the general type of environment of the location. (ex. forest, field, nursery, etc)"
            }
        ]
    },
    "eventDateRange": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "eventDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter based on an Event DbId"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Internal database identifier"
            }
        ]
    },
    "eventDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A detailed, human-readable description of this event\n<br/>MIAPPE V1.1 (DM-67) Event description - Description of the event, including details such as amount applied and possibly duration of the event. "
            }
        ]
    },
    "eventParameters": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of objects describing additional event parameters. Each of the following accepts a human-readable value or URI"
            }
        ]
    },
    "eventType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter based on an Event Type"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "General category for this event (e.g. fertilizer, irrigation, tillage). Each eventType should correspond to exactly one eventTypeDbId, if provided.\n<br/>ICASA Management events allow for the following types: planting, fertilizer, irrigation, tillage, organic_material, harvest, bed_prep, inorg_mulch, inorg_mul_rem, chemicals, mowing, observation, weeding, puddling, flood_level, other\n<br/>MIAPPE V1.1 (DM-65) Event type - Short name of the event."
            }
        ]
    },
    "eventTypeDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An identifier for this event type, in the form of an ontology class reference\n<br/>ICASA Management events allow for the following types: planting, fertilizer, irrigation, tillage, organic_material, harvest, bed_prep, inorg_mulch, inorg_mul_rem, chemicals, mowing, observation, weeding, puddling, flood_level, other\n<br/>MIAPPE V1.1 (DM-66) Event accession number - Accession number of the event type in a suitable controlled vocabulary (Crop Ontology)."
            }
        ]
    },
    "expandHomozygotes": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "post /search/allelematrix",
                        "get /calls",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "post /search/variantsets",
                        "get /variants/{variantDbId}/calls",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Should homozygotes be expanded (true) or collapsed into a single occurrence (false)"
            }
        ]
    },
    "experimentalDesign": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The experimental and statistical design full description plus a category PUI taken from crop research ontology or agronomy ontology"
            }
        ]
    },
    "exposure": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Describes the level of protection/exposure for things like sun light and wind."
            }
        ]
    },
    "externalReferenceID": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /images",
                        "get /lists",
                        "get /methods",
                        "get /crossingprojects",
                        "get /observationunits",
                        "get /seedlots/transactions",
                        "get /samples",
                        "get /people",
                        "get /locations",
                        "get /seedlots",
                        "get /crosses",
                        "get /variables",
                        "get /studies",
                        "get /programs",
                        "get /germplasm",
                        "get /plates",
                        "get /traits",
                        "get /attributevalues",
                        "get /trials",
                        "get /plannedcrosses",
                        "get /scales",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Programs",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "Trials",
                        "Images",
                        "Samples",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `externalReferenceId`. Github issue number #460 \n<br>An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)"
            }
        ]
    },
    "externalReferenceIDs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/studies",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `externalReferenceIds`. Github issue number #460 \n<br>List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)"
            }
        ]
    },
    "externalReferenceId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets",
                        "get /observations",
                        "get /callsets",
                        "get /pedigree",
                        "get /images",
                        "get /lists",
                        "get /methods",
                        "get /references",
                        "get /crossingprojects",
                        "get /observationunits",
                        "get /seedlots/transactions",
                        "get /samples",
                        "get /people",
                        "get /locations",
                        "get /seedlots",
                        "get /crosses",
                        "get /variables",
                        "get /studies",
                        "get /programs",
                        "get /germplasm",
                        "get /plates",
                        "get /traits",
                        "get /attributevalues",
                        "get /trials",
                        "get /referencesets",
                        "get /plannedcrosses",
                        "get /variants",
                        "get /scales",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)"
            }
        ]
    },
    "externalReferenceIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/studies",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)"
            }
        ]
    },
    "externalReferenceSource": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets",
                        "get /observations",
                        "get /callsets",
                        "get /pedigree",
                        "get /images",
                        "get /lists",
                        "get /methods",
                        "get /references",
                        "get /crossingprojects",
                        "get /observationunits",
                        "get /seedlots/transactions",
                        "get /samples",
                        "get /people",
                        "get /locations",
                        "get /seedlots",
                        "get /crosses",
                        "get /variables",
                        "get /studies",
                        "get /programs",
                        "get /germplasm",
                        "get /plates",
                        "get /traits",
                        "get /attributevalues",
                        "get /trials",
                        "get /referencesets",
                        "get /plannedcrosses",
                        "get /variants",
                        "get /scales",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "An identifier for the source system or database of an external reference (use with `externalReferenceId` parameter)"
            }
        ]
    },
    "externalReferenceSources": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/studies",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of identifiers for the source system or database of an external reference (use with `externalReferenceIDs` parameter)"
            }
        ]
    },
    "externalReferences": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method",
                        "Study",
                        "Person",
                        "List",
                        "Location",
                        "CallSet",
                        "Trial",
                        "Variable.trait",
                        "Plate",
                        "Variable.scale",
                        "Program",
                        "Variable"
                    ],
                    "paths": [
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "put /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "post /plates",
                        "post /search/studies",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "put /scales/{scaleDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "post /observationunits",
                        "post /locations",
                        "post /lists/{listDbId}/data",
                        "post /search/germplasm",
                        "post /attributevalues",
                        "get /callsets",
                        "get /images",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "get /crossingprojects",
                        "put /observations",
                        "get /seedlots/transactions",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /methods/{methodDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /attributes",
                        "post /germplasm",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "post /crosses",
                        "get /observations/{observationDbId}",
                        "post /lists",
                        "put /plannedcrosses",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "post /methods",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI."
            }
        ]
    },
    "factor": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of treatment/factor. ex. 'fertilizer', 'inoculation', 'irrigation', etc\n\nMIAPPE V1.1 (DM-61) Experimental Factor type - Name/Acronym of the experimental factor."
            }
        ]
    },
    "familyCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The code representing the family"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "A familyCode representing the family this germplasm belongs to."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The code representing the family of this germplasm"
            }
        ]
    },
    "familyCodes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A familyCode representing the family this germplasm belongs to."
            }
        ]
    },
    "fieldAbbreviation": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call.genotypeMetadata"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The abbreviated code of the field represented in this Genotype Field. These codes should match the VCF standard when possible. Examples include: \"GQ\", \"RD\", and \"HQ\"\n<br> This maps to a FORMAT field in the VCF file standard."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The abbreviated code of the field represented in this Genotype Field. These codes should match the VCF standard when possible. Examples include: \"GQ\", \"RD\", and \"HQ\""
            }
        ]
    },
    "fieldName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call.genotypeMetadata"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the field represented in this Genotype Field. Examples include: \"Genotype Quality\", \"Read Depth\", and \"Haplotype Quality\"\n<br> This maps to a FORMAT field in the VCF file standard."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the field represented in this Genotype Field. Examples include: \"Genotype Quality\", \"Read Depth\", and \"Haplotype Quality\""
            }
        ]
    },
    "fieldValue": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call.genotypeMetadata"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The additional metadata value associated with this genotype call"
            }
        ]
    },
    "fileDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable description of the file contents"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable long description for this form"
            }
        ]
    },
    "fileFormat": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The MIME type of the file (ie text/csv, application/excel, application/zip).\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "fileFormat defines the MIME type of the file (ie text/csv, application/excel, application/zip). This should also be reflected in the Accept and ContentType HTTP headers for every relevant request and response."
            }
        ]
    },
    "fileMD5Hash": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The MD5 Hash of the file contents to be used as a check sum"
            }
        ]
    },
    "fileName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the file"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name for this form"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/results"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the file"
            }
        ]
    },
    "fileSize": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The size of the file in bytes"
            }
        ]
    },
    "fileType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type or format of the file. Preferably MIME Type."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/results"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Format of the file"
            }
        ]
    },
    "fileURL": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The absolute URL where the file is located"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A URL which indicates the location of the file version of this VariantSet. Could be a static file URL or an API endpoint which generates the file."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The URL to download this form"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/results"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The URL to a file with the results of a vendor analysis"
            }
        ]
    },
    "filtersApplied": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "True if filters were applied for this variant. VCF column 7 \"FILTER\" any value other than the missing value."
            }
        ]
    },
    "filtersFailed": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Zero or more filters that failed for this variant. VCF column 7 \"FILTER\" shared across all alleles in the same VCF record."
            }
        ]
    },
    "filtersPassed": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "True if all filters for this variant passed. VCF column 7 \"FILTER\" value PASS."
            }
        ]
    },
    "firstName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "A persons first name"
            },
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Persons first name"
            }
        ]
    },
    "firstNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Persons first name"
            }
        ]
    },
    "formula": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "For computational methods i.e., when the method consists in assessing the trait by computing measurements, write the generic formula used for the calculation"
            }
        ]
    },
    "fromSeedLotDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The identifier for the Seed Lot being transfered out of"
            }
        ]
    },
    "fundingInformation": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Information describing the grant or funding source for this program"
            }
        ]
    },
    "genotype": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `genotypeValue` or `genotypeMetadata`. Github issue number #491             \n<br>`ListValue` is a wrapper around a repeated field of values.\n<br>The JSON representation for `ListValue` is JSON array."
            }
        ]
    },
    "genotypeMetadata": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Genotype Metadata are additional layers of metadata associated with each genotype."
            }
        ]
    },
    "genotypeValue": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The value of this genotype call"
            }
        ]
    },
    "genotype_likelihood": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `genotypeMetadata`. Github issue number #491             \n<br>The genotype likelihood for this variant call. Each array entry represents how likely a specific genotype is for this call as log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The value ordering is defined by the GL tag in the VCF spec."
            }
        ]
    },
    "genus": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Genus name to identify germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Genus name for taxon. Initial uppercase letter required.\n\nMCPD (v2.1) (GENUS) 5. Genus name for taxon. Initial uppercase letter required.\n\nMIAPPE V1.1 (DM-43) Genus - Genus name for the organism under study, according to standard scientific nomenclature."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (GENUS) 5. Genus name for taxon. Initial uppercase letter required."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The scientific genus of a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of Genus names to identify germplasm"
            }
        ]
    },
    "geoCoordinates": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "put /observations",
                        "get /observationunits",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.\n\nCopied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element."
            }
        ]
    },
    "geometry": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location.coordinates"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "put /images/{imageDbId}",
                        "get /observations",
                        "post /observationunits",
                        "post /locations",
                        "post /search/germplasm",
                        "post /search/images",
                        "post /germplasm",
                        "get /images",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "put /observations",
                        "get /observationunits",
                        "post /delete/images",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /locations",
                        "post /search/observationunits",
                        "put /germplasm/{germplasmDbId}",
                        "put /observationunits/{observationUnitDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "put /observations/{observationDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /locations/{locationDbId}",
                        "post /search/locations",
                        "put /images/{imageDbId}/imagecontent"
                    ],
                    "tags": [
                        "Images",
                        "Germplasm",
                        "Locations",
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A geometry as defined by GeoJSON (RFC 7946). In this context, only Point or Polygon geometry are allowed."
            }
        ]
    },
    "georeferencingMethod": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (GEOREFMETH) 15.7  The georeferencing method used (GPS, determined from map, gazetteer, or estimated using software). Leave the value empty if georeferencing method is not known."
            }
        ]
    },
    "germplasmDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /plates",
                        "get /allelematrix",
                        "get /seedlots",
                        "get /attributevalues",
                        "get /observationunits",
                        "get /observations",
                        "get /observations/table",
                        "get /seedlots/transactions",
                        "get /studies",
                        "get /samples",
                        "get /germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "get /attributes"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Plates",
                        "Samples",
                        "Germplasm Attributes",
                        "Call Sets",
                        "Studies",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Germplasm",
                        "Seed Lots",
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Germplasm` unique identifier. \n<br/>Use `GET /germplasm` to find the list of available `Germplasm` on a server."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/referencesets",
                        "get /referencesets",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "post /attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a germplasm within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /crossingprojects",
                        "get /plannedcrosses",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "put /crosses",
                        "post /plannedcrosses",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a germplasm within the given database server \n<br>MIAPPE V1.1 (DM-41) Biological material ID - Code used to identify the biological material in the data file. Should be unique within the Investigation. Can correspond to experimental plant ID, seed lot ID, etc. This material identification is different from a BiosampleID which corresponds to Observation Unit or Samples sections below."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /germplasm/{germplasmDbId}",
                        "get /germplasm/{germplasmDbId}"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The internal id of the germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "the internal id of the germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique identifier which identifies a germplasm in this database"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "get /observations",
                        "post /observationunits",
                        "get /pedigree",
                        "post /pedigree",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/pedigree/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "put /observations",
                        "get /observationunits",
                        "put /pedigree",
                        "post /search/observations",
                        "post /search/observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /observations",
                        "post /search/pedigree",
                        "get /germplasm/{germplasmDbId}/progeny"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree",
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The germplasm DbId of the parent of this germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the germplasm DbId of the sibling"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/progeny"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier of a progeny germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Germplasm` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Germplasm`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique DbId of the Germplasm contained in this Seed Lot"
            }
        ]
    },
    "germplasmDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/studies",
                        "post /search/pedigree",
                        "post /search/references",
                        "post /search/attributevalues",
                        "post /search/attributes",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Germplasm Attributes",
                        "Call Sets",
                        "Studies",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Germplasm",
                        "References",
                        "Observation Units",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of IDs which uniquely identify germplasm to search for"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `Germplasm` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Germplasm`"
            }
        ]
    },
    "germplasmName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /allelematrix",
                        "get /seedlots",
                        "get /seedlots/transactions",
                        "get /germplasm"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Germplasm",
                        "Pedigree",
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Germplasm` by its human readable name. \n<br/>Use `GET /germplasm` to find the list of available `Germplasm` on a server."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /attributevalues/{attributeValueDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/observationunits",
                        "put /observations",
                        "get /observationunits",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations",
                        "post /attributevalues"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the germplasm. It can be the preferred name and does not have to be unique."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /crossingprojects",
                        "get /plannedcrosses",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "put /crosses",
                        "post /plannedcrosses",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name for a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the germplasm. It can be the preferred name and does not have to be unique.\n\nMCPD (v2.1) (ACCENAME) 11. Either a registered or other designation given to the material received, other than the donors accession number (23) or collecting number (3). First letter uppercase. Multiple names are separated by a semicolon without space."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /pedigree",
                        "post /search/pedigree",
                        "get /germplasm/{germplasmDbId}/progeny"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name of the parent of this germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the germplasm name of the sibling"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/progeny"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a progeny germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a `Germplasm`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the Germplasm contained in this Seed Lot"
            }
        ]
    },
    "germplasmNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/studies",
                        "post /search/pedigree",
                        "post /search/references",
                        "post /search/attributevalues",
                        "post /search/attributes",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Plates",
                        "Samples",
                        "Germplasm Attributes",
                        "Call Sets",
                        "Studies",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Germplasm",
                        "References",
                        "Observation Units",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of human readable names to identify germplasm to search for"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of human readable `Germplasm` names"
            }
        ]
    },
    "germplasmOrigin": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Information for material (orchard, natural sites, ...). Geographic identification of the plants from which seeds or cutting have been taken to produce that germplasm."
            }
        ]
    },
    "germplasmPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix",
                        "get /pedigree",
                        "get /germplasm"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Germplasm` by its global permanent unique identifier. \n<br/>Use `GET /germplasm` to find the list of available `Germplasm` on a server."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "put /pedigree",
                        "post /search/pedigree",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier which represents a germplasm\n\nMIAPPE V1.1 (DM-41) Biological material ID - Code used to identify the biological material in the data file. Should be unique within the Investigation. Can correspond to experimental plant ID, seed lot ID, etc This material identification is different from a BiosampleID which corresponds to Observation Unit or Samples sections below.\n\nMIAPPE V1.1 (DM-51) Material source DOI - Digital Object Identifier (DOI) of the material source\n\nMCPD (v2.1) (PUID) 0. Any persistent, unique identifier assigned to the accession so it can be unambiguously referenced at the global level and the information associated with it harvested through automated means. Report one PUID for each accession. The Secretariat of the International Treaty on Plant Genetic Resources for Food and Agriculture (PGRFA) is facilitating the assignment of a persistent unique identifier (PUID), in the form of a DOI, to PGRFA at the accession level. Genebanks not applying a true PUID to their accessions should use, and request recipients to use, the concatenation of INSTCODE, ACCENUMB, and GENUS as a globally unique identifier similar in most respects to the PUID whenever they exchange information on accessions with third parties."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (PUID) 0. Any persistent, unique identifier assigned to the accession so it can be unambiguously referenced at the global level and the information associated with it harvested through automated means. Report one PUID for each accession. The Secretariat of the International Treaty on Plant Genetic Resources for Food and Agriculture (PGRFA) is facilitating the assignment of a persistent unique identifier (PUID), in the form of a DOI, to PGRFA at the accession level. Genebanks not applying a true PUID to their accessions should use, and request recipients to use, the concatenation of INSTCODE, ACCENUMB, and GENUS as a globally unique identifier similar in most respects to the PUID whenever they exchange information on accessions with third parties."
            }
        ]
    },
    "germplasmPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of premenant unique identifiers associated with `Germplasm`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of Permanent Unique Identifiers to identify germplasm"
            }
        ]
    },
    "germplasmPreprocessing": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of any process or treatment applied uniformly to the germplasm, prior to the study itself. Can be provided as free text or as an accession number from a suitable controlled vocabulary."
            }
        ]
    },
    "growthFacility": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Short description of the facility in which the study was carried out."
            }
        ]
    },
    "growthStage": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Growth stage at which measurement is made (examples: \"flowering\")"
            }
        ]
    },
    "headerRow": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "<p>The table is REQUIRED to have the following columns</p>\n<ul>\n  <li>observationUnitDbId - Each row is related to one Observation Unit</li>\n  <li>observationTimeStamp - Each row is has a time stamp for when the observation was taken</li>\n  <li>At least one column with an observationVariableDbId</li>\n</ul>\n<p>The table may have any or all of the following OPTIONAL columns. Included columns are decided by the server developer</p>\n<ul>\n  <li>observationUnitName</li>\n  <li>studyDbId</li>\n  <li>studyName</li>\n  <li>germplasmDbId</li>\n  <li>germplasmName</li>\n  <li>positionCoordinateX</li>\n  <li>positionCoordinateY</li>\n  <li>year</li>\n</ul>\n<p>The table also may have any number of Observation Unit Hierarchy Level columns. For example:</p>\n<ul>\n  <li>field</li>\n  <li>plot</li>\n  <li>sub-plot</li>\n  <li>plant</li>\n  <li>pot</li>\n  <li>block</li>\n  <li>entry</li>\n  <li>rep</li>\n</ul>\n<p>The JSON representation provides a pair of extra arrays for defining the headers of the table. \nThe first array \"headerRow\" will always contain \"observationUnitDbId\" and any or all of the OPTIONAL column header names. \nThe second array \"observationVariables\" contains the names and DbIds for the Observation Variables represented in the table. \nBy appending the two arrays, you can construct the complete header row of the table. </p>"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "<p>The table is REQUIRED to have the following columns</p>\n<ul>\n  <li>observationUnitDbId - Each row is related to one Observation Unit</li>\n  <li>At least one column with an observationVariableDbId</li>\n</ul>\n<p>The table may have any or all of the following OPTIONAL columns. Included columns are decided by the server developer</p>\n<ul>\n  <li>observationUnitName</li>\n  <li>studyDbId</li>\n  <li>studyName</li>\n  <li>germplasmDbId</li>\n  <li>germplasmName</li>\n  <li>positionCoordinateX</li>\n  <li>positionCoordinateY</li>\n  <li>year</li>\n</ul>\n<p>The table also may have any number of Observation Unit Hierarchy Level columns. For example:</p>\n<ul>\n  <li>field</li>\n  <li>plot</li>\n  <li>sub-plot</li>\n  <li>plant</li>\n  <li>pot</li>\n  <li>block</li>\n  <li>entry</li>\n  <li>rep</li>\n</ul>\n<p>The JSON representation provides a pair of extra arrays for defining the headers of the table. \nThe first array \"headerRow\" will always contain \"observationUnitDbId\" and any or all of the OPTIONAL column header names. \nThe second array \"observationVariables\" contains the names and DbIds for the Observation Variables represented in the table. \nBy appending the two arrays, you can construct the complete header row of the table. </p>"
            }
        ]
    },
    "imageDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "put /images/{imageDbId}"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a image"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier of an image"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /images/{imageDbId}/imagecontent"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for an image"
            }
        ]
    },
    "imageDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of image Ids to search for"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique ids of the Image records which have been successfully deleted"
            }
        ]
    },
    "imageFileName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the image file. Might be the same as 'imageName', but could be different."
            }
        ]
    },
    "imageFileNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Image file names to search for."
            }
        ]
    },
    "imageFileSize": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The size of the image in Bytes."
            }
        ]
    },
    "imageFileSizeMax": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A maximum image file size to search for."
            }
        ]
    },
    "imageFileSizeMin": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A minimum image file size to search for."
            }
        ]
    },
    "imageHeight": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The height of the image in Pixels."
            }
        ]
    },
    "imageHeightMax": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A maximum image height to search for."
            }
        ]
    },
    "imageHeightMin": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A minimum image height to search for."
            }
        ]
    },
    "imageLocation": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A GeoJSON Polygon which describes an area to search for other GeoJSON objects. All contained Points and intersecting Polygons should be returned as search results. \n\nAll coordinates are decimal values on the WGS84 geographic coordinate reference system."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.\n\nCopied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element."
            }
        ]
    },
    "imageName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name of an image"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of an image. Might be the same as 'imageFileName', but could be different."
            }
        ]
    },
    "imageNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable names to search for."
            }
        ]
    },
    "imageTimeStamp": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date and time the image was taken"
            }
        ]
    },
    "imageTimeStampRangeEnd": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The latest timestamp to search for."
            }
        ]
    },
    "imageTimeStampRangeStart": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The earliest timestamp to search for."
            }
        ]
    },
    "imageURL": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The complete, absolute URI path to the image file. Images might be stored on a different host or path than the BrAPI web server."
            }
        ]
    },
    "imageWidth": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The width of the image in Pixels."
            }
        ]
    },
    "imageWidthMax": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A maximum image width to search for."
            }
        ]
    },
    "imageWidthMin": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A minimum image width to search for."
            }
        ]
    },
    "includeFullTree": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Recursively include ALL of the nodes present in this pedigree tree."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If this parameter is true, recursively include ALL of the nodes available in this pedigree tree"
            }
        ]
    },
    "includeObservations": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to include a list of observations embedded in each ObservationUnit object. \n\nCAUTION - Use this parameter at your own risk. It may return large, unpaginated lists of observation data. Only set this value to True if you are sure you need to. "
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/observationunits"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Use this parameter to include a list of observations embedded in each ObservationUnit object. \n\nCAUTION - Use this parameter at your own risk. It may return large, unpaginated lists of observation data. Only set this value to True if you are sure you need to."
            }
        ]
    },
    "includeParents": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "If this parameter is true, include the array of parents in the response"
            }
        ]
    },
    "includePotentialParents": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "If the parameter 'includePotentialParents' is false, the array 'potentialParents' should be empty, null, or excluded from the response object."
            }
        ]
    },
    "includeProgeny": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "If this parameter is true, include the array of progeny in the response"
            }
        ]
    },
    "includeSiblings": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "include array of siblings in response"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "If this parameter is true, include the array of siblings in the response"
            }
        ]
    },
    "instituteAddress": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLINSTADDRESS) 4.1.1  Address of the institute collecting the sample. This descriptor should be used only if COLLCODE can not be filled since the FAO WIEWS code for this institute is not available. Multiple values are separated by a semicolon without space."
            },
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The street address of the institute representing this location\n<br/> MIAPPE V1.1 (DM-16) Contact institution - Name and address of the institution responsible for the study."
            }
        ]
    },
    "instituteAddresses": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The street address of the institute to search for"
            }
        ]
    },
    "instituteCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The code for the institute that maintains the material. \n\nMCPD (v2.1) (INSTCODE) 1. FAO WIEWS code of the institute where the accession is maintained. The codes consist of the 3-letter ISO 3166 country code of the country where the institute is located plus a number (e.g. PER001). The current set of institute codes is available from http://www.fao.org/wiews. For those institutes not yet having an FAO Code, or for those with \"obsolete\" codes, see \"Common formatting rules (v)\"."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (BREDCODE) 18. FAO WIEWS code of the institute that has bred the material. If the holding institute has bred the material, the breeding institute code (BREDCODE) should be the same as the holding institute code (INSTCODE). Follows INSTCODE standard. Multiple values are separated by a semicolon without space."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLCODE) 4.  FAO WIEWS code of the institute collecting the sample. If the holding institute has collected the material, the collecting institute code (COLLCODE) should be the same as the holding institute code (INSTCODE). Follows INSTCODE standard. Multiple values are separated by a semicolon without space."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DONORCODE) 22. FAO WIEWS code of the donor institute. Follows INSTCODE standard."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (INSTCODE) 1. FAO WIEWS code of the institute where the accession is maintained. The codes consist of the 3-letter ISO 3166 country code of the country where the institute is located plus a number (e.g. PER001). The current set of institute codes is available from http://www.fao.org/wiews. For those institutes not yet having an FAO Code, or for those with \"obsolete\" codes, see \"Common formatting rules (v)\"."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DUPLSITE) 25. FAO WIEWS code of the institute(s) where a safety duplicate of the accession is maintained. Follows INSTCODE standard."
            }
        ]
    },
    "instituteCodes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The code for the institute that maintains the material. \n<br/> MCPD (v2.1) (INSTCODE) 1. FAO WIEWS code of the institute where the accession is maintained. The codes consist of the 3-letter ISO 3166 country code of the country where the institute is located plus a number (e.g. PER001). The current set of institute codes is available from http://www.fao.org/wiews. For those institutes not yet having an FAO Code, or for those with \"obsolete\" codes, see \"Common formatting rules (v)\"."
            }
        ]
    },
    "instituteName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the institute that maintains the material"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (BREDNAME) 18.1  Name of the institute (or person) that bred the material. This descriptor should be used only if BREDCODE can not be filled because the FAO WIEWS code for this institute is not available. Multiple names are separated by a semicolon without space."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLNAME) 4.1  Name of the institute collecting the sample. This descriptor should be used only if COLLCODE can not be filled because the FAO WIEWS code for this institute is not available. Multiple values are separated by a semicolon without space."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DONORNAME) 22.1  Name of the donor institute (or person). This descriptor should be used only if DONORCODE can not be filled because the FAO WIEWS code for this institute is not available."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DUPLINSTNAME) 25.1  Name of the institute where a safety duplicate of the accession is maintained."
            },
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Each institute/laboratory can have several experimental field\n<br/> MIAPPE V1.1 (DM-16) Contact institution - Name and address of the institution responsible for the study."
            },
            {
                "context": {
                    "classes": [
                        "Study.contacts",
                        "Trial.contacts"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /search/trials",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the institution which this contact is part of\n\nMIAPPE V1.1 (DM-35) Person affiliation - The institution the person belongs to"
            }
        ]
    },
    "instituteNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the institute to search for"
            }
        ]
    },
    "institution": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of institution submitting the variable"
            }
        ]
    },
    "isDerived": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "If the reference is derived from a source sequence"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A sequence X is said to be derived from source sequence Y, if X and Y are of the same length and the per-base sequence divergence at A/C/G/T bases is sufficiently small. Two sequences derived from the same official sequence share the same coordinates and annotations, and can be replaced with the official sequence for certain use cases."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A reference set may be derived from a source if it contains additional sequences, or some of the sequences within it are derived (see the definition of `isDerived` in `Reference`)."
            }
        ]
    },
    "key": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `name`. Github issue number #440             \n<br>Specifies the relationship between the event and the given property. E.g. fertilizer, operator"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "label": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues.categories"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A text label for a category"
            }
        ]
    },
    "language": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "2 letter ISO 639-1 code for the language of submission of the variable."
            }
        ]
    },
    "lastName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "A persons last name"
            },
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Persons last name"
            }
        ]
    },
    "lastNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Persons last name"
            }
        ]
    },
    "lastUpdate": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date and time when this study was last modified"
            }
        ]
    },
    "lastUpdated": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The timestamp for the last update to this Seed Lot (including transactions)"
            }
        ]
    },
    "latitudeDecimal": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DECLATITUDE) 15.1 Latitude expressed in decimal degrees. Positive values are North of the Equator; negative values are South of the Equator (e.g. -44.6975)."
            }
        ]
    },
    "latitudeDegrees": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (LATITUDE) 15.2 Degrees (2 digits) minutes (2 digits), and seconds (2 digits) followed by N (North) or S (South) (e.g. 103020S). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 10"
            }
        ]
    },
    "leadPersonDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier of the program leader"
            }
        ]
    },
    "leadPersonDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The person DbIds of the program leader to search for"
            }
        ]
    },
    "leadPersonName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the program leader"
            }
        ]
    },
    "leadPersonNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The names of the program leader to search for"
            }
        ]
    },
    "length": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The length of this `Reference` sequence."
            }
        ]
    },
    "levelCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An ID code or number to represent a real thing that may or may not be an an observation unit.\n<br/>For example, if the 'levelName' is 'plot', then the 'levelCode' would be the plot number or plot barcode. If this plot is also considered an ObservationUnit, then the appropriate observationUnitDbId should also be recorded.\n<br/>If the 'levelName' is 'field', then the 'levelCode' might be something like '3' or 'F3' to indicate the third field at a research station. "
            }
        ]
    },
    "levelName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.observationLevels"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /studies/{studyDbId}",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "get /observationlevels",
                        "get /studies",
                        "post /studies",
                        "post /search/observations",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A name for this level \n\n**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "levelOrder": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.observationLevels"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /studies/{studyDbId}",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "get /observationlevels",
                        "get /studies",
                        "post /studies",
                        "post /search/observations",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "`levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`'s lower numbers \nare at the top of the hierarchy (ie field -> 1) and higher numbers are at the bottom of the hierarchy (ie plant -> 9). \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "licence": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /ontologies",
                        "get /ontologies/{ontologyDbId}",
                        "get /ontologies",
                        "put /ontologies/{ontologyDbId}"
                    ],
                    "tags": [
                        "Ontologies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology licence"
            }
        ]
    },
    "license": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The usage license associated with the study data"
            },
            {
                "context": {
                    "classes": [
                        "Trial.datasetAuthorships"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-7) License - License for the reuse of the data associated with this investigation. The Creative Commons licenses cover most use cases and are recommended."
            }
        ]
    },
    "linkageGroupCount": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of linkage groups present in a `GenomeMap`"
            }
        ]
    },
    "linkageGroupName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The Uniquely Identifiable name of a `LinkageGroup`\n<br> This might be a chromosome identifier or the generic linkage group identifier if the chromosome is not applicable."
            }
        ]
    },
    "linkageGroupNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of Uniquely Identifiable linkage group names"
            }
        ]
    },
    "listDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /lists/{listDbId}/items",
                        "get /lists",
                        "get /lists/{listDbId}",
                        "put /lists/{listDbId}"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of this generic list"
            },
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a List"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /lists/{listDbId}/data"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier of a generic List"
            }
        ]
    },
    "listDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "listDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of a List"
            }
        ]
    },
    "listName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name of this generic list"
            },
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable name of a List"
            }
        ]
    },
    "listNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "listOwnerName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable name of a List Owner. (usually a user or person)"
            }
        ]
    },
    "listOwnerNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "listOwnerPersonDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a List Owner. (usually a user or person)"
            }
        ]
    },
    "listOwnerPersonDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "listSize": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of elements in a List"
            }
        ]
    },
    "listSource": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The source tag of this generic list"
            },
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The description of where a List originated from"
            }
        ]
    },
    "listSources": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "listType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The type of objects contained by this generic list"
            },
            {
                "context": {
                    "classes": [
                        "List"
                    ],
                    "paths": [
                        "get /lists",
                        "get /lists/{listDbId}",
                        "post /lists",
                        "get /search/lists/{searchResultsDbId}",
                        "put /lists/{listDbId}",
                        "post /lists/{listDbId}/data",
                        "post /lists/{listDbId}/items",
                        "post /search/lists"
                    ],
                    "tags": [
                        "Lists"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "location": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Physical location of this server (ie. City, Country)"
            }
        ]
    },
    "locationDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study",
                        "Location"
                    ],
                    "paths": [
                        "get /seedlots/{seedLotDbId}",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "get /seedlots",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "put /studies/{studyDbId}",
                        "post /locations",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "post /seedlots",
                        "get /studies",
                        "put /seedlots/{seedLotDbId}",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Locations",
                        "Seed Lots",
                        "Studies"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a Location"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "put /locations/{locationDbId}"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The internal DB id for a location"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of a location where these observations were collected"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a location, associated with this study"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies",
                        "get /trials"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by location"
            }
        ]
    },
    "locationDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/locations",
                        "post /search/studies",
                        "post /search/trials",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Trials",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The location ids to search for"
            }
        ]
    },
    "locationDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COLLSITE) 14. Location information below the country level that describes where the accession was collected, preferable in English. This might include the distance in kilometres and direction from the nearest town, village or map grid reference point, (e.g. 7 km south of Townsville)."
            }
        ]
    },
    "locationName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "A human readable name for a location\n<br/> MIAPPE V1.1 (DM-18) Experimental site name - The name of the natural site, experimental field, greenhouse, phenotyping facility, etc. where the experiment took place."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a location associated with this study"
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for this location\n\nMIAPPE V1.1 (DM-18) Experimental site name - The name of the natural site, experimental field, greenhouse, phenotyping facility, etc. where the experiment took place."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for a location"
            }
        ]
    },
    "locationNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/locations",
                        "post /search/studies",
                        "post /search/trials",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Trials",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable names to search for"
            }
        ]
    },
    "locationType": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The type of location this represents (ex. Field Station, Breeding Location, Storage Location, etc)"
            }
        ]
    },
    "locationTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of location this represents (ex. Breeding Location, Storage Location, etc)"
            }
        ]
    },
    "longitudeDecimal": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (DECLONGITUDE) 15.3 Longitude expressed in decimal degrees. Positive values are East of the Greenwich Meridian; negative values are West of the Greenwich Meridian (e.g. +120.9123)."
            }
        ]
    },
    "longitudeDegrees": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (LONGITUDE) 15.4 Degrees (3 digits), minutes (2 digits), and seconds (2 digits) followed by E (East) or W (West) (e.g. 0762510W). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 076"
            }
        ]
    },
    "mailingAddress": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "physical address of this person"
            }
        ]
    },
    "mailingAddresses": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "physical address of this person"
            }
        ]
    },
    "mainAbbreviation": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Main abbreviation for trait name. (examples: \"Carotenoid content\" => \"CC\")"
            }
        ]
    },
    "mapDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap",
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps",
                        "post /search/markerpositions",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `GenomeMap`"
            }
        ]
    },
    "mapDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `GenomeMaps` within the given database server"
            }
        ]
    },
    "mapName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap",
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps",
                        "post /search/markerpositions",
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for a `GenomeMap`"
            }
        ]
    },
    "mapPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The DOI or other permanent identifier for a `GenomeMap`"
            }
        ]
    },
    "markerCount": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of markers present in a `GenomeMap`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /maps/{mapDbId}/linkagegroups"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of markers associated with a `LinkageGroup`"
            }
        ]
    },
    "max": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `maximumValue`. Github issue number #450 \n<br>Maximum value for numerical scales. Typically used for data capture control and QC."
            }
        ]
    },
    "maxLength": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The maximum length of the reference sequences to be retrieved."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The minimum length of this `References` sequence."
            }
        ]
    },
    "maxPosition": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /maps/{mapDbId}/linkagegroups"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The maximum position of a marker within a `LinkageGroup`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The maximum position"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The maximum position of markers in a given map"
            }
        ]
    },
    "maximumValue": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Maximum value for numerical, date, and time scales. Typically used for data capture control and QC."
            }
        ]
    },
    "md5checksum": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "If specified, return the references for which the `md5checksum` matches this string (case-sensitive, exact match)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The MD5 checksum uniquely representing this `Reference` as a lower-case hexadecimal string, calculated as the MD5 of the upper-case sequence excluding all whitespace characters (this is equivalent to SQ:M5 in SAM)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "If set, return the reference sets for which the `md5checksum` matches this string (case-sensitive, exact match)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Order-independent MD5 checksum which identifies this `ReferenceSet`.\n\nTo compute this checksum, make a list of `Reference.md5checksum` for all\n`Reference` s in this set. Then sort that list, and take the MD5 hash of\nall the strings concatenated together. Express the hash as a lower-case\nhexadecimal string."
            }
        ]
    },
    "md5checksums": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If specified, return the references for which the `md5checksum` matches this string (case-sensitive, exact match)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If set, return the reference sets for which the `md5checksum` matches this string (case-sensitive, exact match)."
            }
        ]
    },
    "md5sum": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/results"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MD5 Hash Check Sum for the file to confirm download without error"
            }
        ]
    },
    "message": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A short message concerning the status of this request/response"
            }
        ]
    },
    "messageType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The logging level for the attached message"
            }
        ]
    },
    "metadata": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "metadataFields": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The 'metadataFields' array indicates which types of genotyping data and metadata are available in the VariantSet. \n<br> When possible, these field names and abbreviations should follow the VCF standard "
            }
        ]
    },
    "method": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "methodClass": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Method class (examples: \"Measurement\", \"Counting\", \"Estimation\", \"Computation\", etc.)"
            }
        ]
    },
    "methodDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Method unique identifier"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /methods"
                    ],
                    "tags": [
                        "Methods"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a method"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /methods/{methodDbId}",
                        "get /methods/{methodDbId}"
                    ],
                    "tags": [
                        "Methods"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Id of the method to retrieve details of."
            }
        ]
    },
    "methodDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of methods to filter search results"
            }
        ]
    },
    "methodName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Human readable name for the method\n<br/>MIAPPE V1.1 (DM-88) Method  Name of the method of observation"
            }
        ]
    },
    "methodNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable name for the method\n<br/>MIAPPE V1.1 (DM-88) Method  Name of the method of observation"
            }
        ]
    },
    "methodPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /methods",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /methods",
                        "post /variables",
                        "get /methods/{methodDbId}",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /methods/{methodDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Methods",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Method, usually in the form of a URI"
            }
        ]
    },
    "methodPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Method, usually in the form of a URI"
            }
        ]
    },
    "methods": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The possible HTTP Methods to be used with the available call"
            }
        ]
    },
    "middleName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Persons middle name"
            }
        ]
    },
    "middleNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Persons middle name"
            }
        ]
    },
    "mimeType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The file type of the image. Examples 'image/jpeg', 'image/png', 'image/svg', etc"
            }
        ]
    },
    "mimeTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A set of image file types to search for."
            }
        ]
    },
    "min": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `minimumValue`. Github issue number #450 \n<br>Minimum value for numerical scales. Typically used for data capture control and QC."
            }
        ]
    },
    "minLength": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The minimum length of the reference sequences to be retrieved."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The minimum length of this `References` sequence."
            }
        ]
    },
    "minPosition": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The minimum position"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The minimum position of markers in a given map"
            }
        ]
    },
    "minimumValue": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Minimum value for numerical, date, and time scales. Typically used for data capture control and QC."
            }
        ]
    },
    "mixturePercentage": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The percentage of the given germplasm in the seed lot mixture."
            }
        ]
    },
    "mlsStatus": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (MLSSTAT) 27. The status of an accession with regards to the Multilateral System (MLS) of the International Treaty on Plant Genetic Resources for Food and Agriculture. Leave the value empty if the status is not known 0 No (not included) 1 Yes (included) 99 Other (elaborate in REMARKS field, e.g. \"under development\")"
            }
        ]
    },
    "modality": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The treatment/factor description. ex. 'low fertilizer', 'yellow rust inoculation', 'high water', etc\n\nMIAPPE V1.1 (DM-62) Experimental Factor description - Free text description of the experimental factor. This includes all relevant treatments planned and protocol planned for all the plants targeted by a given experimental factor. "
            }
        ]
    },
    "name": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The full name of an event parameter\n<br>ICASA \"Variable_Name\""
            },
            {
                "context": {
                    "classes": [
                        "Study.contacts",
                        "Trial.contacts"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /search/trials",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The full name of this contact person\n\nMIAPPE V1.1 (DM-31) Person name - The name of the person (either full name or as used in scientific publications)"
            },
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the external data link\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file."
            }
        ]
    },
    "nextPageToken": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/variants/{searchResultsDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /variants",
                        "post /search/variants",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `page`. Github issue number #451 \n<br>The string token used to query the next page of data."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results. This field will be empty if there are not any additional results."
            }
        ]
    },
    "notation": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "text representation of the pedigree"
            }
        ]
    },
    "numberOfSamples": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders",
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The total number of samples contained in this request. Used for billing and basic validation of the request."
            }
        ]
    },
    "objective": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The primary objective of the program"
            }
        ]
    },
    "objectives": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A program objective to search for"
            }
        ]
    },
    "observationDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier of the observation an image is associated with"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of an Observation"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an observation"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /observations/{observationDbId}",
                        "get /observations/{observationDbId}"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of an observation"
            }
        ]
    },
    "observationDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of observation Ids this image is associated with to search for"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique id of an Observation"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique ids of the Observation records which have been successfully deleted"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of observation Ids this image is associated with, if applicable."
            }
        ]
    },
    "observationLevel": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `observationUnitLevelName`. Github issue number #464 \n<br>The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure. "
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The exact level and level code of an observation unit. \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. \n\nMIAPPE V1.1 DM-71 Observation unit type \"Type of observation unit in textual form, usually one of the following: study, block, sub-block, plot, sub-plot, pot, plant. Use of other observation unit types is possible but not recommended. \nThe observation unit type can not be used to indicate sub-plant levels. However, observations can still be made on the sub-plant level, as long as the details are indicated in the associated observed variable (see observed variables). \nAlternatively, it is possible to use samples for more detailed tracing of sub-plant units, attaching the observations to them instead.\" "
            }
        ]
    },
    "observationLevelRelationships": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/observationunits",
                        "post /delete/observations",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Searches for values in ObservationUnit->observationUnitPosition->observationLevelRelationships"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Observation levels indicate the granularity level at which the measurements are taken. `levelName` \ndefines the level, `levelOrder` defines where that level exists in the hierarchy of levels. \n`levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are \nat the bottom of the hierarchy (ie plant > 6). `levelCode` is an ID code for this level tag. Identify \nthis observation unit by each level of the hierarchy where it exists. \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. \n\n**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** "
            }
        ]
    },
    "observationLevels": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/observationunits",
                        "post /delete/observations",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Searches for values in ObservationUnit->observationUnitPosition->observationLevel"
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Observation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). "
            }
        ]
    },
    "observationTimeStamp": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date and time when this observation was made"
            }
        ]
    },
    "observationTimeStampRangeEnd": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "post /delete/observations",
                        "get /observations/table",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Timestamp range end"
            }
        ]
    },
    "observationTimeStampRangeStart": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "post /delete/observations",
                        "get /observations/table",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Timestamp range start"
            }
        ]
    },
    "observationUnitDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /crossingprojects",
                        "get /plannedcrosses",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "put /crosses",
                        "post /plannedcrosses",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for an observation unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an observation unit\n<br/>If this level has on ObservationUnit associated with it, record the observationUnitDbId here. This is intended to construct a strict hierarchy of observationUnits. \n<br/>If there is no ObservationUnit associated with this level, this field can set to NULL or omitted from the response."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter based on an ObservationUnit unique identifier in which the events occurred"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier of the observation unit an image is portraying"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /images",
                        "get /images/{imageDbId}",
                        "post /images",
                        "put /images/{imageDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "put /images/{imageDbId}/imagecontent",
                        "post /search/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The related observation unit identifier, if relevant."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of an Observation Unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an observation unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an observation unit\n\nMIAPPE V1.1 (DM-70) Observation unit ID - Identifier used to identify the observation unit in data files containing the values observed or measured on that unit. Must be locally unique. "
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of the specific Observation Unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plates",
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an `ObservationUnit`"
            }
        ]
    },
    "observationUnitDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/images",
                        "post /delete/images"
                    ],
                    "tags": [
                        "Images"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A set of observation unit identifiers to search for."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /delete/observations",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique id of an Observation Unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of the affected observation units. If this parameter is not given, it is understood that the event affected all units in the study"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/observationunits"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique id of an observation unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an observation unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an `ObservationUnit`"
            }
        ]
    },
    "observationUnitLevelCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The Observation Unit Level Code. This parameter should be used together with `observationUnitLevelName` \nor `observationUnitLevelOrder`. References ObservationUnit->observationUnitPosition->observationLevel->levelCode \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitLevelName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The Observation Unit Level. Returns only the observation unit of the specified Level. \n<br/>References ObservationUnit->observationUnitPosition->observationLevel->levelName \n<br/>**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitLevelOrder": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The Observation Unit Level Order Number. Returns only the observation unit of the specified Level. \nReferences ObservationUnit->observationUnitPosition->observationLevel->levelOrder \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitLevelRelationshipCode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The Observation Unit Level Code. \n<br/>This parameter should be used together with `observationUnitLevelName` or `observationUnitLevelOrder`. References ObservationUnit->observationUnitPosition->observationLevel->levelCode \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitLevelRelationshipDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The observationUnitDbId associated with a particular level and code.\n<br/>This parameter should be used together with `observationUnitLevelName` or `observationUnitLevelOrder`. References ObservationUnit->observationUnitPosition->observationLevel->observationUnitDbId \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitLevelRelationshipName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The Observation Unit Level Relationship is a connection that this observation unit has to another level of the hierarchy. \n<br/>For example, if you have several observation units at a 'plot' level, they might all share a relationship to the same 'field' level.  \n<br/>Use this parameter to identify groups of observation units that share a relationship level. \n<br/>**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitLevelRelationshipOrder": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The Observation Unit Level Order Number. \n<br/>Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelOrder \n<br/>For more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. "
            }
        ]
    },
    "observationUnitName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /crossingprojects",
                        "get /plannedcrosses",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "put /crosses",
                        "post /plannedcrosses",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name for an observation unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "put /observations",
                        "get /observationunits",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for an observation unit"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable identifier for an Observation Unit"
            }
        ]
    },
    "observationUnitNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/observationunits"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable identifier for an Observation Unit"
            }
        ]
    },
    "observationUnitPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A Permanent Unique Identifier for an observation unit\n\nMIAPPE V1.1 (DM-72) External ID - Identifier for the observation unit in a persistent repository, comprises the name of the repository and the identifier of the observation unit therein. The EBI Biosamples repository can be used. URI are recommended when possible."
            }
        ]
    },
    "observationUnitPosition": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "All positional and layout information related to this Observation Unit \n\nMIAPPE V1.1 (DM-73) Spatial distribution - Type and value of a spatial coordinate (georeference or relative) \nor level of observation (plot 45, subblock 7, block 2) provided as a key-value pair of the form type:value. \nLevels of observation must be consistent with those listed in the Study section."
            }
        ]
    },
    "observationUnitsDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-25) Observation unit description - General description of the observation units in the study."
            }
        ]
    },
    "observationVariableDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /methods",
                        "get /traits",
                        "get /scales"
                    ],
                    "tags": [
                        "Traits",
                        "Methods",
                        "Scales"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for an observation variable"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of an observation variable"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies an observation variable"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Variable unique identifier"
            },
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /search/variables",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /variables/{observationVariableDbId}"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Variable unique identifier\n\nMIAPPE V1.1 (DM-83) Variable ID - Code used to identify the variable in the data file. We recommend using a variable definition from the Crop Ontology where possible. Otherwise, the Crop Ontology naming convention is recommended: <trait abbreviation>_<method abbreviation>_<scale abbreviation>). A variable ID must be unique within a given investigation."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by observation variable DbId"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Variable's unique ID"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables/{observationVariableDbId}",
                        "put /variables/{observationVariableDbId}"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "string id of the variable"
            }
        ]
    },
    "observationVariableDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/studies",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Observation Units",
                        "Observations",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The DbIds of Variables to search for"
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The list of Observation Variables being used in this study. \n\nThis list is intended to be the wishlist of variables to collect in this study. It may or may not match the set of variables used in the collected observation records. "
            }
        ]
    },
    "observationVariableName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for an observation variable"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Variable name (usually a short name)"
            },
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /search/variables",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /variables/{observationVariableDbId}"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Variable name (usually a short name)\n\nMIAPPE V1.1 (DM-84) Variable name - Name of the variable."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /variables/{observationVariableDbId}",
                        "get /variables"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Human readable name of an Observation Variable"
            }
        ]
    },
    "observationVariableNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/studies",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Observation Units",
                        "Observations",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The names of Variables to search for"
            }
        ]
    },
    "observationVariablePUI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /variables/{observationVariableDbId}",
                        "get /variables"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Observation Variable, usually in the form of a URI"
            }
        ]
    },
    "observationVariablePUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/studies",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Observation Units",
                        "Observations",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of an Observation Variable, usually in the form of a URI"
            }
        ]
    },
    "observationVariables": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The list of observation variables which have values recorded for them in the data matrix. Append to the 'headerRow' for complete header row of the table."
            }
        ]
    },
    "observations": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "All observations attached to this observation unit. \n\nDefault for this field is null or omitted. Do NOT include data in this field unless the 'includeObservations' flag is explicitly set to True."
            }
        ]
    },
    "offset": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The offset position (0-based) of the given sequence from the start of this `Reference`. This value will differ for each page in a request."
            }
        ]
    },
    "ontologyDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method.ontologyReference",
                        "Variable.ontologyReference",
                        "Variable.trait.ontologyReference",
                        "Variable.scale.ontologyReference"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "get /scales/{scaleDbId}",
                        "post /vendor/plates",
                        "get /attributes",
                        "put /ontologies/{ontologyDbId}",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "post /ontologies",
                        "get /vendor/plates/{submissionId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /ontologies",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Traits",
                        "Methods",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Vendor",
                        "Ontologies",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology database unique identifier"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /methods",
                        "get /ontologies",
                        "get /traits",
                        "get /ontologies/{ontologyDbId}",
                        "get /variables",
                        "get /scales",
                        "put /ontologies/{ontologyDbId}"
                    ],
                    "tags": [
                        "Traits",
                        "Ontologies",
                        "Observation Variables",
                        "Methods",
                        "Scales"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for an ontology definition. Use this parameter to filter results based on a specific ontology \n\nUse `GET /ontologies` to find the list of available ontologies on a server."
            }
        ]
    },
    "ontologyDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of ontology IDs to search for"
            }
        ]
    },
    "ontologyName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method.ontologyReference",
                        "Variable.ontologyReference",
                        "Variable.trait.ontologyReference",
                        "Variable.scale.ontologyReference"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "get /scales/{scaleDbId}",
                        "post /vendor/plates",
                        "get /attributes",
                        "put /ontologies/{ontologyDbId}",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "post /ontologies",
                        "get /vendor/plates/{submissionId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /ontologies",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Traits",
                        "Methods",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Vendor",
                        "Ontologies",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology name"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /ontologies"
                    ],
                    "tags": [
                        "Ontologies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable identifier for an ontology definition"
            }
        ]
    },
    "ontologyReference": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method",
                        "Variable.scale",
                        "Variable",
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /scales/{scaleDbId}",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Traits",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Methods",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology)."
            }
        ]
    },
    "orcid": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.contacts",
                        "Trial.contacts"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /search/trials",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Open Researcher and Contributor ID for this contact person (orcid.org)\n\nMIAPPE V1.1 (DM-33) Person ID - An identifier for the data submitter. If that submitter is an individual, ORCID identifiers are recommended."
            }
        ]
    },
    "orderId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The order id returned by the vendor when the order was successfully submitted. From response of \"POST /vendor/orders\""
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/status",
                        "get /vendor/orders/{orderId}/results",
                        "get /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The order id returned by the vendor when the order was successfully submitted."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique, alpha-numeric ID which identifies the order"
            }
        ]
    },
    "organismName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Scientific organism name"
            }
        ]
    },
    "organizationName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the organization that manages this server and data"
            }
        ]
    },
    "organizationURL": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The URL of the organization that manages this server and data"
            }
        ]
    },
    "page": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.pagination"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the requested page number (zero indexed)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "get /variantsets",
                        "get /callsets/{callSetDbId}/calls",
                        "get /observations",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /vendor/orders/{orderId}/results",
                        "get /vendor/orders",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /commoncropnames",
                        "get /callsets",
                        "get /attributes",
                        "get /pedigree",
                        "get /images",
                        "get /calls",
                        "get /methods",
                        "get /lists",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /attributes/categories",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /references",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /crossingprojects",
                        "get /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "get /seedlots/transactions",
                        "get /variants/{variantDbId}/calls",
                        "get /observationlevels",
                        "get /samples",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /breedingmethods",
                        "get /markerpositions",
                        "get /people",
                        "get /seasons",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /maps",
                        "get /locations",
                        "get /search/programs/{searchResultsDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "get /crosses",
                        "get /studytypes",
                        "get /variables",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "get /programs",
                        "get /search/references/{searchResultsDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /vendor/orders/{orderId}/plates",
                        "get /plates",
                        "get /ontologies",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /events",
                        "get /search/people/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /search/trials/{searchResultsDbId}",
                        "get /traits",
                        "get /attributevalues",
                        "get /trials",
                        "get /referencesets",
                        "get /plannedcrosses",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /variants",
                        "get /search/callsets/{searchResultsDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /scales",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/markerpositions",
                        "post /search/studies",
                        "post /search/calls",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`."
            }
        ]
    },
    "pageSize": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of data elements returned, aka the size of the current page. If the requested page does not have enough elements to fill a page at the requested page size, this field should indicate the actual number of elements returned."
            },
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.pagination"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the maximum number of elements per page in this dimension of the matrix"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /callsets/{callSetDbId}/calls",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "get /search/variants/{searchResultsDbId}",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations",
                        "post /search/people",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "get /markerpositions",
                        "get /scales",
                        "post /search/markerpositions",
                        "get /observations",
                        "get /vendor/orders/{orderId}/results",
                        "post /search/studies",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "post /search/attributevalues",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /events",
                        "get /attributevalues",
                        "get /plannedcrosses",
                        "get /variants",
                        "get /vendor/orders/{orderId}/plates",
                        "get /variantsets",
                        "post /search/calls",
                        "post /search/germplasm",
                        "get /callsets",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "post /delete/images",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "get /people",
                        "get /seasons",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /ontologies",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /search/samples/{searchResultsDbId}",
                        "get /breedingmethods",
                        "get /search/variables/{searchResultsDbId}",
                        "post /search/programs",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /methods",
                        "get /observationunits",
                        "get /variants/{variantDbId}/calls",
                        "post /search/lists",
                        "get /studytypes",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /referencesets",
                        "post /search/pedigree",
                        "get /search/callsets/{searchResultsDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The size of the pages to be returned. Default is `1000`."
            }
        ]
    },
    "pageToken": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "get /variants"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `page`. Github issue number #451 \n<br> Used to request a specific page of data to be returned.\n<br> Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. "
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/calls",
                        "post /search/variants"
                    ],
                    "tags": [
                        "Calls",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `page`. Github issue number #451 \n<br>Used to request a specific page of data to be returned.\n<br>Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. "
            }
        ]
    },
    "pagination": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "put /plates",
                        "post /observations",
                        "post /images",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "post /attributevalues",
                        "get /callsets",
                        "get /images",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. \n<br> Pages are zero indexed, so the first page will be page 0 (zero)."
            },
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Pagination for the matrix"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/variants/{searchResultsDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /variants",
                        "post /search/variants",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `page`. Github issue number #451 \n<br>The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. \n<br>Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken to construct an additional query and move to the next or previous page respectively.  "
            }
        ]
    },
    "parameterName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the environment parameter constant within the experiment\n\nMIAPPE V1.1 (DM-58) Environment parameter - Name of the environment parameter constant within the experiment. "
            }
        ]
    },
    "parameterPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "URI pointing to an ontology class for the parameter"
            }
        ]
    },
    "parent1": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "parent2": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "parentDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Germplasm with this parent"
            }
        ]
    },
    "parentDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Search for Germplasm with these parents"
            }
        ]
    },
    "parentLocationDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a Location\n<br/> The Parent Location defines the encompassing location that this location belongs to. \nFor example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields."
            }
        ]
    },
    "parentLocationDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a Location\n<br/> The Parent Location defines the encompassing location that this location belongs to. \nFor example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields."
            }
        ]
    },
    "parentLocationName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "A human readable name for a location\n<br/> The Parent Location defines the encompassing location that this location belongs to. \nFor example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields."
            }
        ]
    },
    "parentLocationNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for a location\n<br/> The Parent Location defines the encompassing location that this location belongs to. \nFor example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields."
            }
        ]
    },
    "parentType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /crossingprojects",
                        "get /plannedcrosses",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "put /crosses",
                        "post /plannedcrosses",
                        "put /crossingprojects/{crossingProjectDbId}"
                    ],
                    "tags": [
                        "Crosses",
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of parent ex. 'MALE', 'FEMALE', 'SELF', 'POPULATION', etc."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /pedigree",
                        "post /search/pedigree",
                        "get /germplasm/{germplasmDbId}/progeny"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of parent used during crossing. Accepted values for this field are 'MALE', 'FEMALE', 'SELF', 'POPULATION', and 'CLONAL'. \n\nIn a pedigree record, the 'parentType' describes each parent of a particular germplasm. \n\nIn a progeny record, the 'parentType' is used to describe how this germplasm was crossed to generate a particular progeny. \nFor example, given a record for germplasm A, having a progeny B and C. The 'parentType' field for progeny B item refers \nto the 'parentType' of A toward B. The 'parentType' field for progeny C item refers to the 'parentType' of A toward C.\nIn this way, A could be a male parent to B, but a female parent to C. "
            }
        ]
    },
    "parents": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of parent nodes in the pedigree tree."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of parent germplasm references in the pedigree tree for this germplasm. These represent edges in the tree, connecting to other nodes.\n<br/> Typically, this array should only have one parent (clonal or self) or two parents (cross). In some special cases, there may be more parents, usually when the exact parent is not known. \n<br/> If the parameter 'includeParents' is set to false, then this array should be empty, null, or not present in the response."
            }
        ]
    },
    "pedigree": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The cross name and optional selection history.\n\nMCPD (v2.1) (ANCEST) 20. Information about either pedigree or other description of ancestral information (e.g. parent variety in case of mutant or selection). For example a pedigree 'Hanna/7*Atlas//Turk/8*Atlas' or a description 'mutation found in Hanna', 'selection from Irene' or 'cross involving amongst others Hanna and Irene'."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The string representation of the pedigree in PURDY notation."
            }
        ]
    },
    "pedigreeDepth": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Recursively include this number of levels up the tree in the response"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Recursively include this number of levels up the tree in the response (parents, grand-parents, great-grand-parents, etc)"
            }
        ]
    },
    "pedigreeString": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The string representation of the pedigree for this germplasm in PURDY notation"
            }
        ]
    },
    "personDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /people/{personDbId}",
                        "get /people",
                        "put /people/{personDbId}"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique ID of a person"
            },
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique ID for a person"
            }
        ]
    },
    "personDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique ID for this person"
            }
        ]
    },
    "phaseSet": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If this field is populated, this variant call's genotype ordering implies the phase of the bases and \nis consistent with any other variant calls on the same contig which have the same phase set string."
            }
        ]
    },
    "phoneNumber": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "phone number of this person"
            }
        ]
    },
    "phoneNumbers": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "phone number of this person"
            }
        ]
    },
    "plannedCrossDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for a planned cross"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Planned Cross with this unique id"
            }
        ]
    },
    "plannedCrossName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /crosses",
                        "put /plannedcrosses",
                        "get /crosses",
                        "get /plannedcrosses",
                        "put /crosses",
                        "post /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name for a planned cross"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Planned Cross with this human readable name"
            }
        ]
    },
    "plateBarcode": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "post /plates",
                        "post /search/plates",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique identifier physically attached to a `Plate`"
            }
        ]
    },
    "plateBarcodes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique identifier physically attached to the plate"
            }
        ]
    },
    "plateDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Plate` of `Samples`"
            },
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "post /plates",
                        "post /search/plates",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Plate`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Plate` of `Sample`"
            }
        ]
    },
    "plateDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a plate of samples"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Plate` of `Samples`"
            }
        ]
    },
    "plateFormat": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "post /plates",
                        "post /search/plates",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Enum for plate formats, usually \"PLATE_96\" for a 96 well plate or \"TUBES\" for plateless format"
            }
        ]
    },
    "plateName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name of a `Plate` of `Samples`"
            },
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "post /plates",
                        "post /search/plates",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for a `Plate`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The human readable name of a `Plate` of `Sample`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a `Plate`"
            }
        ]
    },
    "plateNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a plate of samples"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a `Plate` of `Samples`"
            }
        ]
    },
    "plates": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Array of new plates to be submitted to a vendor"
            }
        ]
    },
    "pollinationEvents": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The list of pollination events that occurred for this cross"
            }
        ]
    },
    "pollinationNumber": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for this pollination event"
            }
        ]
    },
    "pollinationSuccessful": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "True if the pollination was successful"
            }
        ]
    },
    "pollinationTimeStamp": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The timestamp when the pollination took place"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crosses",
                        "put /crosses",
                        "post /crosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `pollinationEvents`. Github issue number #265 \n<br>The timestamp when the pollination took place"
            }
        ]
    },
    "position": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The position of a marker or variant within a `LinkageGroup`"
            }
        ]
    },
    "positionCoordinateX": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The X position coordinate for an observation unit. Different systems may use different coordinate systems."
            }
        ]
    },
    "positionCoordinateXType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of positional coordinate used. Must be one of the following values \n\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nPLANTED_ROW - The physical planted row number \n\nPLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row \n\nGRID_ROW - The row index number of a square grid overlay \n\nGRID_COL - The column index number of a square grid overlay \n\nMEASURED_ROW - The distance in meters from a defined 0-th row \n\nMEASURED_COL - The distance in meters from a defined 0-th column "
            }
        ]
    },
    "positionCoordinateY": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Y position coordinate for an observation unit. Different systems may use different coordinate systems."
            }
        ]
    },
    "positionCoordinateYType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of positional coordinate used. Must be one of the following values \n\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nPLANTED_ROW - The physical planted row number  \n\nPLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row \n\nGRID_ROW - The row index number of a square grid overlay \n\nGRID_COL - The column index number of a square grid overlay \n\nMEASURED_ROW - The distance in meters from a defined 0-th row \n\nMEASURED_COL - The distance in meters from a defined 0-th column "
            }
        ]
    },
    "positionRange": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The postion range to search\n<br/> Uses the format \"contig:start-end\" where \"contig\" is the chromosome or contig name, \"start\" is  \nthe starting position of the range, and \"end\" is the ending position of the range\n<br> Example: CRHOM_1:12000-14000"
            }
        ]
    },
    "positionRanges": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The postion range to search\n<br/>\nUses the format \"<chrom>:<start>-<end>\" where <chrom> is the chromosome name, <start> is \nthe starting position of the range, and <end> is the ending position of the range"
            }
        ]
    },
    "potentialParents": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of all the potential parents in the crossing block, available in the crossing project\n<br/> If the parameter 'includePotentialParents' is false, the array 'potentialParents' should be empty, null, or excluded from the response object."
            }
        ]
    },
    "prevPageToken": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/variants/{searchResultsDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /variants",
                        "post /search/variants",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `page`. Github issue number #451 \n<br>The string token used to query the previous page of data."
            }
        ]
    },
    "preview": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Default Value = false\n<br/>If 'preview' is set to true, then the server should return with the \"dataMatrices\" field as null or empty. All other data fields should be returned normally. \nThis is intended to be a preview and give the client a sense of how large the matrix returned will be\n<br/>If 'preview' is set to false or not set (default), then the server should return all the matrix data as requested."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Default Value = false\n<br/>\nIf 'preview' is set to true, then the server should only return the lists of 'callSetDbIds', \n'variantDbIds', and 'variantSetDbIds'. The server should not return any matrix data. This\nis intended to be a preview and give the client a sense of how large the matrix returned will be\n<br/>\nIf 'preview' is set to false or not set (default), then the server should return all the matrix\ndata as requested."
            }
        ]
    },
    "progeny": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/progeny"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of germplasm entities which are direct children of this germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of germplasm references that are direct children of this germplasm. These represent edges in the tree, connecting to other nodes.\n<br/> The given germplasm could have a large number of progeny, across a number of different breeding methods. The 'parentType' shows \n      the type of parent this germplasm is to each of the child germplasm references.\n<br/> If the parameter 'includeProgeny' is set to false, then this array should be empty, null, or not present in the response."
            }
        ]
    },
    "progenyDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Search for Germplasm with this child"
            }
        ]
    },
    "progenyDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Search for Germplasm with these children"
            }
        ]
    },
    "progenyDepth": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Recursively include this number of levels down the tree in the response"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Recursively include this number of levels down the tree in the response (children, grand-children, great-grand-children, etc)"
            }
        ]
    },
    "programDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets",
                        "get /observations",
                        "get /observations/table",
                        "get /observationunits/table",
                        "get /pedigree",
                        "get /images",
                        "get /lists",
                        "get /methods",
                        "get /references",
                        "get /crossingprojects",
                        "get /observationunits",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "get /samples",
                        "get /people",
                        "get /maps",
                        "get /locations",
                        "get /seedlots",
                        "get /crosses",
                        "get /variables",
                        "get /studies",
                        "get /programs",
                        "get /germplasm",
                        "get /plates",
                        "get /traits",
                        "get /attributevalues",
                        "get /trials",
                        "get /referencesets",
                        "get /plannedcrosses",
                        "get /scales",
                        "get /attributes"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Program` unique identifier. \n<br/>Use `GET /programs` to find the list of available `Programs` on a server."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the unique identifier for a program"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a program"
            },
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "post /plates",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/plates/{searchResultsDbId}",
                        "post /search/plates",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Program` within the given database server"
            },
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies the program"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by the common crop name. Exact match."
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A program identifier to search for"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique DbId of the breeding program this Seed Lot belongs to"
            }
        ]
    },
    "programDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/studies",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A BrAPI Program represents the high level organization or group who is responsible for conducting trials and studies. Things like Breeding Programs and Funded Projects are considered BrAPI Programs. \n\nUse this parameter to only return results associated with the given programs. \n\nUse `GET /programs` to find the list of available programs on a server."
            }
        ]
    },
    "programName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "post /crossingprojects",
                        "get /crossingprojects"
                    ],
                    "tags": [
                        "Crossing Projects"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "the human readable name for a program"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a program"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Program` by its human readable name. \n<br/>Use `GET /programs` to find the list of available `Programs` on a server."
            },
            {
                "context": {
                    "classes": [
                        "Program",
                        "Trial"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials",
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Human readable name of the program"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the breeding program this Seed Lot belongs to"
            }
        ]
    },
    "programNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs",
                        "post /search/studies",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/images",
                        "post /delete/observations",
                        "post /delete/images",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "post /search/people",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given program names. Program names are not required to be unique.\n\nUse `GET /programs` to find the list of available programs on a server."
            }
        ]
    },
    "programType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The type of program entity this object represents\n<br/> 'STANARD' represents a standard, permenant breeding program\n<br/> 'PROJECT' represents a short term project, usually with a set time limit based on funding "
            },
            {
                "context": {
                    "classes": [
                        "Program"
                    ],
                    "paths": [
                        "post /programs",
                        "post /search/programs",
                        "get /search/programs/{searchResultsDbId}",
                        "get /programs",
                        "put /programs/{programDbId}",
                        "get /programs/{programDbId}"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of program entity this object represents\n<br/> 'STANARD' represents a standard, permenant breeding program\n<br/> 'PROJECT' represents a short term project, usually with a set time limit based on funding   "
            }
        ]
    },
    "programTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/programs"
                    ],
                    "tags": [
                        "Programs"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of program entity this object represents\n<br/> 'STANARD' represents a standard, permenant breeding program\n<br/> 'PROJECT' represents a short term project, usually with a set time limit based on funding "
            }
        ]
    },
    "provenance": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The description of the origin or ownership of this linked data. Could be a formal reference to software, method, or workflow."
            }
        ]
    },
    "publicReleaseDate": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial.datasetAuthorships"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-6) Public release date - Date of first public release of the dataset presently being described."
            }
        ]
    },
    "publicationPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial.publications"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "publicationReference": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial.publications"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "publications": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-9) Associated publication - An identifier for a literature publication where the investigation is described. Use of DOIs is recommended."
            }
        ]
    },
    "publishedDate": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date this `GenomeMap` was published"
            }
        ]
    },
    "rdfValue": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `code`. Github issue number #440             \n<brThe type of the value given above, e.g. http://xmlns.com/foaf/0.1/Agent"
            }
        ]
    },
    "referenceBases": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The reference bases for this variant. They start at the given start position."
            }
        ]
    },
    "referenceDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /references/{referenceDbId}/bases",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID of the `Reference` to be retrieved."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a `Reference`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `referenceDbIds`. Github issue number #472\n<br/>Only return variants on this reference."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a Reference"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Reference`"
            }
        ]
    },
    "referenceDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `References` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a genotype `Reference`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a genotype Reference"
            }
        ]
    },
    "referenceID": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location.externalReferences",
                        "Variable.externalReferences",
                        "Plate.externalReferences",
                        "CallSet.externalReferences",
                        "Program.externalReferences",
                        "List.externalReferences",
                        "Variable.method.externalReferences",
                        "Study.externalReferences",
                        "Trial.externalReferences",
                        "Variable.scale.externalReferences",
                        "Variable.trait.externalReferences",
                        "Person.externalReferences"
                    ],
                    "paths": [
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "put /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "post /plates",
                        "post /search/studies",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "put /scales/{scaleDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "post /observationunits",
                        "post /locations",
                        "post /lists/{listDbId}/data",
                        "post /search/germplasm",
                        "post /attributevalues",
                        "get /callsets",
                        "get /images",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "get /crossingprojects",
                        "put /observations",
                        "get /seedlots/transactions",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /methods/{methodDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /attributes",
                        "post /germplasm",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "post /crosses",
                        "get /observations/{observationDbId}",
                        "post /lists",
                        "put /plannedcrosses",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "post /methods",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `referenceId`. Github issue number #460 \n<br>The external reference ID. Could be a simple string or a URI."
            }
        ]
    },
    "referenceId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location.externalReferences",
                        "Variable.externalReferences",
                        "Plate.externalReferences",
                        "CallSet.externalReferences",
                        "Program.externalReferences",
                        "List.externalReferences",
                        "Variable.method.externalReferences",
                        "Study.externalReferences",
                        "Trial.externalReferences",
                        "Variable.scale.externalReferences",
                        "Variable.trait.externalReferences",
                        "Person.externalReferences"
                    ],
                    "paths": [
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "put /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "post /plates",
                        "post /search/studies",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "put /scales/{scaleDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "post /observationunits",
                        "post /locations",
                        "post /lists/{listDbId}/data",
                        "post /search/germplasm",
                        "post /attributevalues",
                        "get /callsets",
                        "get /images",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "get /crossingprojects",
                        "put /observations",
                        "get /seedlots/transactions",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /methods/{methodDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /attributes",
                        "post /germplasm",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "post /crosses",
                        "get /observations/{observationDbId}",
                        "post /lists",
                        "put /plannedcrosses",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "post /methods",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The external reference ID. Could be a simple string or a URI."
            }
        ]
    },
    "referenceName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a `Reference` within a `ReferenceSet`."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The reference on which this variant occurs. (e.g. `chr_20` or `X`)"
            }
        ]
    },
    "referenceSetDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /references",
                        "get /referencesets"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID of the `ReferenceSet` to be retrieved."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a `ReferenceSet`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /referencesets/{referenceSetDbId}",
                        "post /search/referencesets",
                        "get /referencesets",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a ReferenceSet"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The ID of the reference set that describes the sequences used by the variants in this set."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `ReferenceSet`"
            }
        ]
    },
    "referenceSetDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/references"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `ReferenceSets` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The `ReferenceSets` to search."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a genotype `ReferenceSet`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a genotype ReferenceSet"
            }
        ]
    },
    "referenceSetName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a `ReferenceSet`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a ReferenceSet"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the ReferenceSet"
            }
        ]
    },
    "referenceSource": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location.externalReferences",
                        "Variable.externalReferences",
                        "Plate.externalReferences",
                        "CallSet.externalReferences",
                        "Program.externalReferences",
                        "List.externalReferences",
                        "Variable.method.externalReferences",
                        "Study.externalReferences",
                        "Trial.externalReferences",
                        "Variable.scale.externalReferences",
                        "Variable.trait.externalReferences",
                        "Person.externalReferences"
                    ],
                    "paths": [
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "put /observationunits",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "post /plates",
                        "post /search/studies",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "put /scales/{scaleDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "post /observationunits",
                        "post /locations",
                        "post /lists/{listDbId}/data",
                        "post /search/germplasm",
                        "post /attributevalues",
                        "get /callsets",
                        "get /images",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "get /crossingprojects",
                        "put /observations",
                        "get /seedlots/transactions",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "put /methods/{methodDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /attributes",
                        "post /germplasm",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "post /crosses",
                        "get /observations/{observationDbId}",
                        "post /lists",
                        "put /plannedcrosses",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "post /methods",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Programs",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "Seed Lots",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An identifier for the source system or database of this reference"
            }
        ]
    },
    "remarks": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (REMARKS) 28. The remarks field is used to add notes or to elaborate on descriptors with value 99 or 999 (= Other). Prefix remarks with the field name they refer to and a colon (:) without space (e.g. COLLSRC:riverside). Distinct remarks referring to different fields are separated by semi-colons without space."
            }
        ]
    },
    "requiredServiceInfo": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders",
                        "get /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A map of additional data required by the requested service. This includes things like Volume and Concentration."
            }
        ]
    },
    "result": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /samples",
                        "post /search/trials",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "post /attributevalues",
                        "get /callsets",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "get /breedingmethods",
                        "put /methods/{methodDbId}",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /search/plates/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /attributes",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /callsets/{callSetDbId}"
                    ],
                    "tags": [
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A CallSet is a collection of Calls that were generated by the same analysis of the same Sample"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A `Reference` is a canonical assembled contig, intended to act as a reference coordinate space for other genomic annotations. A single `Reference` might represent the human chromosome 1, for instance. `References` are designed to be immutable."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A string representation of the `Reference` base alleles."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A `ReferenceSet` is a set of `Reference` s which typically comprise a reference assembly, such as `GRCH_38`. A `ReferenceSet` defines a common coordinate space for comparing reference-aligned experimental data."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /scales/{scaleDbId}",
                        "put /scales/{scaleDbId}"
                    ],
                    "tags": [
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Scale metadata"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A `Variant` represents a change in DNA sequence relative to some reference.\nFor example, a variant could represent a SNP or an insertion.\nVariants belong to a `VariantSet`.\nThis is equivalent to a row in VCF."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /variantsets/extract",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A VariantSet is a collection of variants and variant calls intended to be analyzed together."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Response to an order request"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Response of a plate submission"
            }
        ]
    },
    "row": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Row identifier for this `Sample` location in the `Plate`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Row identifier for this samples location in the plate"
            }
        ]
    },
    "safetyDuplicateInstitutes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "sampleBarcode": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique identifier physically attached to the `Sample`"
            }
        ]
    },
    "sampleDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /callsets"
                    ],
                    "tags": [
                        "Call Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Sample` within the given database server\n<br>Filter results to only include `CallSets` generated from this `Sample`"
            },
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Biosample entity the call set data was generated from."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plates",
                        "put /samples/{sampleDbId}",
                        "get /samples",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a `Sample`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Sample`\n<br> MIAPPE V1.1 (DM-76) Sample ID - Unique identifier for the sample."
            }
        ]
    },
    "sampleDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix",
                        "post /search/callsets"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `Samples` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a sample"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Sample`"
            }
        ]
    },
    "sampleDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of a `Sample`\n<br>MIAPPE V1.1 (DM-79) Sample description - Any information not captured by the other sample fields, including quantification, sample treatments and processing."
            }
        ]
    },
    "sampleGroupDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plates",
                        "get /samples"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a group of related `Samples`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a group of `Samples`"
            }
        ]
    },
    "sampleGroupDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a group of related Samples"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a group of related `Samples`"
            }
        ]
    },
    "sampleName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /plates",
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The human readable name of the `Sample`"
            }
        ]
    },
    "sampleNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/callsets"
                    ],
                    "tags": [
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of human readable names associated with `Samples`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/plates"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the sample"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/samples"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the `Sample`"
            }
        ]
    },
    "samplePUI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A permanent unique identifier for the `Sample` (DOI, URL, UUID, etc)\n<br> MIAPPE V1.1 (DM-81) External ID - An identifier for the sample in a persistent repository, comprising the name of the repository and the accession number of the observation unit therein. Submission to the EBI Biosamples repository is recommended. URI are recommended when possible. "
            }
        ]
    },
    "sampleSubmissionFormat": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Enum for plate formats, usually \"PLATE_96\" for a 96 well plate or \"TUBES\" for plateless format"
            }
        ]
    },
    "sampleTimestamp": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date and time a `Sample` was collected from the field\n<br> MIAPPE V1.1 (DM-80) Collection date - The date and time when the sample was collected / harvested"
            }
        ]
    },
    "sampleType": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "post /plates",
                        "post /search/plates",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Plates"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of samples taken. ex. 'DNA', 'RNA', 'Tissue', etc"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of `Sample` taken. ex. 'DNA', 'RNA', 'Tissue', etc"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of Samples being submitted"
            }
        ]
    },
    "samples": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "scale": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Scale metadata"
            }
        ]
    },
    "scaleDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Scale unique identifier"
            },
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique identifier of the scale. If left blank, the upload system will automatically generate a scale ID."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /scales"
                    ],
                    "tags": [
                        "Scales"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a scale"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /scales/{scaleDbId}",
                        "put /scales/{scaleDbId}"
                    ],
                    "tags": [
                        "Scales"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Id of the scale to retrieve details of."
            }
        ]
    },
    "scaleDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a Scale"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of scales to filter search results"
            }
        ]
    },
    "scaleName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Human readable name for the scale\n<br/>MIAPPE V1.1 (DM-88) Scale  Name of the scale of observation"
            },
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the scale\n<br/>MIAPPE V1.1 (DM-92) Scale Name of the scale associated with the variable"
            }
        ]
    },
    "scaleNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the scale\n<br/>MIAPPE V1.1 (DM-92) Scale Name of the scale associated with the variable"
            }
        ]
    },
    "scalePUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Scale, usually in the form of a URI"
            }
        ]
    },
    "scalePUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Scale, usually in the form of a URI"
            }
        ]
    },
    "scientificName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Full scientific binomial format name. This includes Genus, Species, and Sub-species"
            }
        ]
    },
    "scientificType": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The general type of data. For example- Genotyping, Phenotyping raw data, Phenotyping reduced data, Environmental, etc"
            }
        ]
    },
    "scientist": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of scientist submitting the variable."
            }
        ]
    },
    "searchDateRangeEnd": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The end of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The start of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`"
            }
        ]
    },
    "searchDateRangeStart": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/trials",
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The start of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`"
            }
        ]
    },
    "searchResultsDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations/table"
                    ],
                    "tags": [
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Permanent unique identifier which references the search results"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /search/programs",
                        "post /search/markerpositions",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "post /search/calls",
                        "post /search/references",
                        "post /search/callsets",
                        "post /search/germplasm",
                        "post /search/plates",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "post /search/images",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /search/variants/{searchResultsDbId}",
                        "post /search/attributevalues",
                        "post /search/trials",
                        "post /search/lists",
                        "post /search/observations",
                        "get /search/variantsets/{searchResultsDbId}",
                        "post /search/people",
                        "get /search/programs/{searchResultsDbId}",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "get /search/calls/{searchResultsDbId}",
                        "get /search/references/{searchResultsDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "post /search/attributes",
                        "post /search/variants",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /search/people/{searchResultsDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "post /search/locations",
                        "post /search/variantsets",
                        "post /search/pedigree",
                        "get /search/callsets/{searchResultsDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /search/variants/{searchResultsDbId}",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /search/programs/{searchResultsDbId}",
                        "get /search/lists/{searchResultsDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /search/references/{searchResultsDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "get /search/people/{searchResultsDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/plates/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Germplasm",
                        "Observations",
                        "People",
                        "Variants",
                        "Studies",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "References",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Call Sets",
                        "Lists",
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Unique identifier which references the search results"
            }
        ]
    },
    "season": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `seasonName`. Github issue number #456 \n<br>Name of the season. ex. 'Spring', 'Q2', 'Season A', etc."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seasons"
                    ],
                    "tags": [
                        "Seasons"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The term to describe a given season. Example \"Spring\" OR \"May\" OR \"Planting_Time_7\"."
            }
        ]
    },
    "seasonDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observations",
                        "get /observationunits/table",
                        "get /observations/table",
                        "get /observationunits"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)"
            },
            {
                "context": {
                    "classes": [
                        "Season"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "post /seasons",
                        "get /seasons/{seasonDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /seasons/{seasonDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations",
                        "get /seasons"
                    ],
                    "tags": [
                        "Observation Units",
                        "Seasons",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a season. For backward compatibility it can be a string like '2012', '1957-2004'"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /seasons/{seasonDbId}",
                        "get /seasons/{seasonDbId}",
                        "get /seasons"
                    ],
                    "tags": [
                        "Seasons"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a season. For backward compatibility it can be a string like '2012', '1957-2004'"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by season or year"
            }
        ]
    },
    "seasonDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/observationunits",
                        "post /delete/observations",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a season"
            }
        ]
    },
    "seasonName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Season"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "post /seasons",
                        "get /seasons/{seasonDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /seasons/{seasonDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations",
                        "get /seasons"
                    ],
                    "tags": [
                        "Observation Units",
                        "Seasons",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of the season. ex. 'Spring', 'Q2', 'Season A', etc."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seasons"
                    ],
                    "tags": [
                        "Seasons"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The term to describe a given season. Example \"Spring\" OR \"May\" OR \"Planting_Time_7\"."
            }
        ]
    },
    "seasons": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of seasons over which this study was performed."
            }
        ]
    },
    "seedLotDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for the originating Seed Lot"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots/{seedLotDbId}",
                        "get /seedlots",
                        "get /seedlots/transactions",
                        "put /seedlots/{seedLotDbId}",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Unique id for a seed lot on this server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique DbId for the Seed Lot"
            }
        ]
    },
    "seedLotDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A general description of this Seed Lot"
            }
        ]
    },
    "seedLotName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for the originating Seed Lot"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name for this Seed Lot"
            }
        ]
    },
    "seedSource": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An identifier for the source of the biological material\n<br/>MIAPPE V1.1 (DM-50) Material source ID (Holding institute/stock centre, accession) - An identifier for the source of the biological material, in the form of a key-value pair comprising the name/identifier of the repository from which the material was sourced plus the accession number of the repository for that material. Where an accession number has not been assigned, but the material has been derived from the crossing of known accessions, the material can be defined as follows: \"mother_accession X father_accession\", or, if father is unknown, as \"mother_accession X UNKNOWN\". For in situ material, the region of provenance may be used when an accession is not available."
            }
        ]
    },
    "seedSourceDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of the material source\n\nMIAPPE V1.1 (DM-56) Material source description - Description of the material source"
            }
        ]
    },
    "sepPhased": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The string to use as a separator for phased allele calls"
            },
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "post /search/allelematrix",
                        "get /calls",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "post /search/variantsets",
                        "get /variants/{variantDbId}/calls",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The string used as a separator for phased allele calls."
            }
        ]
    },
    "sepUnphased": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The string to use as a separator for unphased allele calls"
            },
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "post /search/allelematrix",
                        "get /calls",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "post /search/variantsets",
                        "get /variants/{variantDbId}/calls",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The string used as a separator for unphased allele calls."
            }
        ]
    },
    "sequence": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A sub-string of the bases that make up this reference. Bases are represented as IUPAC-IUB codes; this string matches the regular expression `[ACGTMRWSYKVHDBN]*`."
            }
        ]
    },
    "serverDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A description of this server"
            }
        ]
    },
    "serverName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of this server"
            }
        ]
    },
    "service": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the available call as recorded in the documentation"
            }
        ]
    },
    "serviceDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of the vendor platform"
            }
        ]
    },
    "serviceId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique identifier for this service"
            }
        ]
    },
    "serviceIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders",
                        "get /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of unique, alpha-numeric ID which identify the requested services to be applied to this order. \nA Vendor Service defines what platform, technology, and markers will be used. \nA list of available service IDs can be retrieved from the Vendor Specs."
            }
        ]
    },
    "serviceName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a platform"
            }
        ]
    },
    "servicePlatformMarkerType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of markers used in this services platform"
            }
        ]
    },
    "servicePlatformName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The technology platform used by this service"
            }
        ]
    },
    "services": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of platform specifications available at the vendor"
            }
        ]
    },
    "shipmentForms": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/orders"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Array of paper forms which need to be printed and included with the physical shipment"
            }
        ]
    },
    "siblings": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/pedigree"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of sibling germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "post /pedigree",
                        "put /pedigree",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of sibling germplasm references in the pedigree tree for this germplasm. These represent edges in the tree, connecting to other nodes.\n<br/> Siblings share at least one parent with the given germplasm. \n<br/> If the parameter 'includeSiblings' is set to false, then this array should be empty, null, or not present in the response."
            }
        ]
    },
    "siteStatus": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of the accessibility of the location (ex. Public, Private)"
            }
        ]
    },
    "slope": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Describes the approximate slope (height/distance) of the location."
            }
        ]
    },
    "software": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The software run to generate this analysis."
            }
        ]
    },
    "sortBy": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Name of one of the fields within the study object on which results can be sorted"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Name of the field to sort by."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Sort order. Name of the field to sort by."
            }
        ]
    },
    "sortOrder": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Order results should be sorted. ex. \"ASC\" or \"DESC\""
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Sort order direction. Ascending/Descending."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Sort order direction: asc/desc"
            }
        ]
    },
    "sourceAccessions": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) which must include a version number, e.g. `GCF_000001405.26`."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally with a version number, e.g. `NC_000001.11`."
            }
        ]
    },
    "sourceCollection": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The description of the source where this material was originally collected (wild, nursery, etc)"
            }
        ]
    },
    "sourceDivergence": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The `sourceDivergence` is the fraction of non-indel bases that do not match the `Reference` this message was derived from."
            }
        ]
    },
    "sourceGermplasm": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /references",
                        "post /search/referencesets",
                        "get /referencesets",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "All known corresponding Germplasm"
            }
        ]
    },
    "sourceName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the taxonomy provider"
            }
        ]
    },
    "sourceURI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The URI from which the sequence was obtained. Specifies a FASTA format file/string with one name, sequence pair. In most cases, clients should call the `getReferenceBases()` method to obtain sequence bases for a `Reference` instead of attempting to retrieve this URI."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /referencesets/{referenceSetDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "post /search/referencesets",
                        "get /referencesets"
                    ],
                    "tags": [
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Specifies a FASTA format file/string."
            }
        ]
    },
    "spatialReferenceSystem": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (COORDDATUM) 15.6 The geodetic datum or spatial reference system upon which the coordinates given in decimal latitude and decimal longitude are based (e.g. WGS84). The GPS uses the WGS84 datum."
            }
        ]
    },
    "species": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Species name to identify germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Specific epithet portion of the scientific name in lowercase letters.\n\nMCPD (v2.1) (SPECIES) 6. Specific epithet portion of the scientific name in lowercase letters. Only the following abbreviation is allowed: \"sp.\" \n\nMIAPPE V1.1 (DM-44) Species - Species name (formally: specific epithet) for the organism under study, according to standard scientific nomenclature."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (SPECIES) 6. Specific epithet portion of the scientific name in lowercase letters. Only the following abbreviation is allowed: \"sp.\" "
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The scientific species of a germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /references",
                        "post /search/referencesets",
                        "get /referencesets",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An ontology term describing an attribute."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of Species names to identify germplasm"
            }
        ]
    },
    "speciesAuthority": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The authority organization responsible for tracking and maintaining the species name \n\nMCPD (v2.1) (SPAUTHOR) 7. Provide the authority for the species name."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (SPAUTHOR) 7. Provide the authority for the species name."
            }
        ]
    },
    "speciesName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Scientific species name"
            }
        ]
    },
    "specificRequirements": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Additional arbitrary requirements for a particular platform"
            }
        ]
    },
    "start": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /references/{referenceDbId}/bases"
                    ],
                    "tags": [
                        "References"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The start position (0-based) of this query. Defaults to 0.\nGenomic positions are non-negative integers less than reference length.\nRequests spanning the join of circular genomes are represented as\ntwo requests one on each side of the join (position 0)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The beginning of the window (0-based, inclusive) for which overlapping variants should be returned. Genomic positions are non-negative integers less than reference length. Requests spanning the join of circular genomes are represented as two requests one on each side of the join (position 0)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "This field is optional and may be ignored if there is no relevant map or reference to be associated with.\n<br> The start position at which this variant occurs (0-based). This corresponds to the first base of the string \nof reference bases. Genomic positions are non-negative integers less than reference length. Variants spanning \nthe join of circular genomes are represented as two variants one on each side of the join (position 0)."
            }
        ]
    },
    "startDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The begining of a continous or regularly repetitive event\n<br/>MIAPPE V1.1 (DM-68) Event date - Date and time of the event."
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date this study started\n\nMIAPPE V1.1 (DM-14) Start date of study - Date and, if relevant, time when the experiment started"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The date this trial started"
            }
        ]
    },
    "status": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The status field contains a list of informational status messages from the server. \nIf no status is reported, an empty list should be returned. See Error Reporting for more information."
            },
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Variable status. (examples: \"recommended\", \"obsolete\", \"legacy\", etc.)"
            },
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Trait status (examples: \"recommended\", \"obsolete\", \"legacy\", etc.)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /plannedcrosses",
                        "post /plannedcrosses",
                        "get /plannedcrosses"
                    ],
                    "tags": [
                        "Crosses"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The status of this planned cross. Is it waiting to be performed ('TODO'), has it been completed successfully ('DONE'), or has it not been done on purpose ('SKIPPED')."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders/{orderId}/status"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "storageLocation": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description the storage location"
            }
        ]
    },
    "storageTypeCodes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (STORAGE) 26. If germplasm is maintained under different types of storage, multiple choices are allowed, separated by a semicolon (e.g. 20;30). (Refer to FAO/IPGRI Genebank Standards 1994 for details on storage type.) 10) Seed collection 11) Short term 12) Medium term 13) Long term 20) Field collection 30) In vitro collection 40) Cryo-preserved collection 50) DNA collection 99) Other (elaborate in REMARKS field)"
            }
        ]
    },
    "storageTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of storage this germplasm is kept in at a genebank."
            }
        ]
    },
    "studyCode": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A short human readable code for a study"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by study code"
            }
        ]
    },
    "studyCodes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A short human readable code for a study"
            }
        ]
    },
    "studyDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "put /observations",
                        "get /observationunits",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "put /observations/{observationDbId}",
                        "post /search/observations",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets",
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a study within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /plates",
                        "get /variantsets",
                        "get /maps",
                        "get /events",
                        "get /references",
                        "get /trials",
                        "get /observationunits",
                        "get /referencesets",
                        "get /observations",
                        "get /variables",
                        "get /observations/table",
                        "get /studies",
                        "get /observationlevels",
                        "get /samples",
                        "get /germplasm",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Plates",
                        "Germplasm",
                        "Samples",
                        "Variant Sets",
                        "Studies",
                        "Genome Maps",
                        "Pedigree",
                        "Events",
                        "Observation Variables",
                        "References",
                        "Observation Units",
                        "Trials",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Study` unique identifier. \n<br/>Use `GET /studies` to find the list of available `Studies` on a server."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The study in which the event occurred"
            },
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "post /plates",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/plates/{searchResultsDbId}",
                        "post /search/plates",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Study` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `studyDbIds`. Github issue number #483 \n<br>The unique ID of a studies to filter on"
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a study within the given database server\n\nMIAPPE V1.1 (DM-11) Study unique ID - Unique identifier comprising the name or identifier for the institution/database hosting the submission of the study data, and the identifier of the study in that institution."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID of the dataset this variant set belongs to."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Identifier of the study. Usually a number, could be alphanumeric."
            }
        ]
    },
    "studyDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /variantsets/extract",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variantsets",
                        "post /search/studies",
                        "post /search/pedigree",
                        "post /search/references",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/callsets",
                        "post /search/trials",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Plates",
                        "Germplasm",
                        "Samples",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Call Sets",
                        "Variants",
                        "Studies",
                        "Pedigree",
                        "Observation Variables",
                        "References",
                        "Observation Units",
                        "Trials",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of study identifiers to search for"
            }
        ]
    },
    "studyDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The description of this study\n\nMIAPPE V1.1 (DM-13) Study description - Human-readable text describing the study"
            }
        ]
    },
    "studyName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a study"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name for a study"
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name for a study\n\nMIAPPE V1.1 (DM-12) Study title - Human-readable text summarising the study"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies",
                        "get /variantsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Study` by its human readable name. \n<br/>Use `GET /studies` to find the list of available `Studies` on a server."
            }
        ]
    },
    "studyNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /variantsets/extract",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variantsets",
                        "post /search/studies",
                        "post /search/pedigree",
                        "post /search/references",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/callsets",
                        "post /search/trials",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Plates",
                        "Germplasm",
                        "Samples",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Call Sets",
                        "Variants",
                        "Studies",
                        "Pedigree",
                        "Observation Variables",
                        "References",
                        "Observation Units",
                        "Trials",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of study names to filter search results"
            }
        ]
    },
    "studyPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A permanent unique identifier associated with this study data. For example, a URI or DOI"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by study PUI"
            }
        ]
    },
    "studyPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Permanent unique identifier associated with study data. For example, a URI or DOI"
            }
        ]
    },
    "studyType": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of study being performed. ex. \"Yield Trial\", etc"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter based on study type unique identifier"
            }
        ]
    },
    "studyTypes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/studies"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of study being performed. ex. \"Yield Trial\", etc"
            }
        ]
    },
    "submissionDate": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial.datasetAuthorships"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1 (DM-5) Submission date - Date of submission of the dataset presently being described to a host repository."
            }
        ]
    },
    "submissionId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/orders",
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The submission id returned by the vendor when a set of plates was successfully submitted. From response of \"POST /vendor/plates\""
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A unique, alpha-numeric ID which identifies a set of plates which have been successfully submitted."
            }
        ]
    },
    "submissionTimestamp": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Timestamp when the Variable was added (ISO 8601)"
            }
        ]
    },
    "subtaxa": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Subtaxon can be used to store any additional taxonomic identifier.\n\nMCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any additional taxonomic identifier. The following abbreviations are allowed: \"subsp.\" (for subspecies); \"convar.\" (for convariety); \"var.\" (for variety); \"f.\" (for form); \"Group\" (for \"cultivar group\").\n\nMIAPPE V1.1 (DM-44) Infraspecific name - Name of any subtaxa level, including variety, crossing name, etc. It can be used to store any additional taxonomic identifier. Either free text description or key-value pair list format (the key is the name of the rank and the value is the value of  the rank). Ranks can be among the following terms: subspecies, cultivar, variety, subvariety, convariety, group, subgroup, hybrid, line, form, subform. For MCPD compliance, the following abbreviations are allowed: subsp. (subspecies); convar. (convariety); var. (variety); f. (form); Group (cultivar group)."
            }
        ]
    },
    "subtaxaAuthority": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The authority organization responsible for tracking and maintaining the subtaxon information\n\nMCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority at the most detailed taxonomic level."
            }
        ]
    },
    "subtaxon": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any additional taxonomic identifier. The following abbreviations are allowed: \"subsp.\" (for subspecies); \"convar.\" (for convariety); \"var.\" (for variety); \"f.\" (for form); \"Group\" (for \"cultivar group\")."
            }
        ]
    },
    "subtaxonAuthority": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /germplasm/{germplasmDbId}/mcpd"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority at the most detailed taxonomic level."
            }
        ]
    },
    "svlen": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Length of the - if labeled as such in variant_type - structural variation. Based on the use in VCF v4.2"
            }
        ]
    },
    "synonym": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "Alternative name or ID used to reference this germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree"
                    ],
                    "tags": [
                        "Pedigree"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "An alternative name or ID used to reference this germplasm"
            }
        ]
    },
    "synonyms": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Other variable names"
            },
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Other trait names"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of alternative names or IDs used to reference this germplasm\n\nMCPD (v2.1) (OTHERNUMB) 24. Any other identifiers known to exist in other collections for this accession. Use the following format: INSTCODE:ACCENUMB;INSTCODE:identifier;INSTCODE and identifier are separated by a colon without space. Pairs of INSTCODE and identifier are separated by a semicolon without space. When the institute is not known, the identifier should be preceded by a colon."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/germplasm",
                        "post /search/pedigree"
                    ],
                    "tags": [
                        "Germplasm",
                        "Pedigree"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of alternative names or IDs used to reference this germplasm"
            }
        ]
    },
    "takenBy": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name or identifier of the entity which took the `Sample` from the field"
            }
        ]
    },
    "taxonId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The identifier (name, ID, URI) of a particular taxonomy within the source provider"
            }
        ]
    },
    "taxonIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as \"ncbiTaxon\" preferably with a purl. The rank of this ID should be species.\n\nMIAPPE V1.1 (DM-42) Organism - An identifier for the organism at the species level. Use of the NCBI taxon ID is recommended."
            }
        ]
    },
    "taxonomyOntologyReference": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology)."
            }
        ]
    },
    "term": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /references",
                        "post /search/referencesets",
                        "get /referencesets",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology term - the label of the ontology term the termId is pointing to."
            }
        ]
    },
    "termURI": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /references",
                        "post /search/referencesets",
                        "get /referencesets",
                        "get /search/references/{searchResultsDbId}",
                        "post /search/references",
                        "get /references/{referenceDbId}"
                    ],
                    "tags": [
                        "References",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology term identifier - the CURIE for an ontology term. It differs from the standard GA4GH schema's :ref:`id ` in that it is a CURIE pointing to an information resource outside of the scope of the schema or its resource implementation."
            }
        ]
    },
    "timestamp": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.lastUpdate"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "tissueType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of tissue sampled. ex. 'Leaf', 'Root', etc.\n<br> MIAPPE V1.1 (DM-78) Plant anatomical entity - A description of  the plant part (e.g. leaf) or the plant product (e.g. resin) from which the sample was taken, in the form of an accession number to a suitable controlled vocabulary (Plant Ontology)."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of tissue in this sample. List of accepted tissue types can be found in the Vendor Specs."
            }
        ]
    },
    "tissueTypeOntologyReference": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology)."
            }
        ]
    },
    "toSeedLotDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The identifier for the Seed Lot being transfered into"
            }
        ]
    },
    "topography": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Location"
                    ],
                    "paths": [
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "get /search/locations/{searchResultsDbId}",
                        "post /search/locations",
                        "put /locations/{locationDbId}",
                        "post /locations"
                    ],
                    "tags": [
                        "Locations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Describes the topography of the land at the location. (ex. Plateau, Cirque, Hill, Valley, etc)"
            }
        ]
    },
    "totalCount": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.pagination"
                    ],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "get /breedingmethods",
                        "put /methods/{methodDbId}",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The total number of elements that are available on the server and match the requested query parameters."
            }
        ]
    },
    "totalPages": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /breedingmethods/{breedingMethodDbId}",
                        "get /callsets/{callSetDbId}/calls",
                        "put /lists/{listDbId}",
                        "post /search/plates",
                        "get /pedigree",
                        "get /search/pedigree/{searchResultsDbId}",
                        "get /search/referencesets/{searchResultsDbId}",
                        "get /attributes/categories",
                        "put /observationunits",
                        "get /germplasm/{germplasmDbId}/mcpd",
                        "get /search/variants/{searchResultsDbId}",
                        "put /pedigree",
                        "get /callsets/{callSetDbId}",
                        "get /samples",
                        "post /search/trials",
                        "get /vendor/plates/{submissionId}",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /locations",
                        "post /search/people",
                        "put /samples/{sampleDbId}",
                        "get /search/calls/{searchResultsDbId}",
                        "get /studies",
                        "post /search/variants",
                        "get /traits/{traitDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /plates",
                        "get /seasons/{seasonDbId}",
                        "get /search/trials/{searchResultsDbId}",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /markerpositions",
                        "get /scales",
                        "put /crossingprojects/{crossingProjectDbId}",
                        "put /images/{imageDbId}",
                        "post /search/markerpositions",
                        "post /seedlots/transactions",
                        "get /observations",
                        "get /scales/{scaleDbId}",
                        "get /observations/table",
                        "post /plates",
                        "post /search/studies",
                        "get /vendor/orders/{orderId}/results",
                        "get /variants/{variantDbId}",
                        "post /search/callsets",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "get /commoncropnames",
                        "post /search/images",
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "get /maps/{mapDbId}/linkagegroups",
                        "get /methods/{methodDbId}",
                        "post /search/attributevalues",
                        "post /plannedcrosses",
                        "post /ontologies",
                        "put /attributes/{attributeDbId}",
                        "post /studies",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /vendor/specifications",
                        "get /germplasm/{germplasmDbId}",
                        "get /referencesets/{referenceSetDbId}",
                        "get /seedlots",
                        "get /search/lists/{searchResultsDbId}",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /crossingprojects",
                        "put /samples",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "get /plates",
                        "get /search/people/{searchResultsDbId}",
                        "post /seasons",
                        "get /events",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variables",
                        "get /attributevalues",
                        "get /people/{personDbId}",
                        "put /people/{personDbId}",
                        "get /plates/{plateDbId}",
                        "post /people",
                        "get /plannedcrosses",
                        "post /samples",
                        "get /variants",
                        "post /lists/{listDbId}/items",
                        "put /images/{imageDbId}/imagecontent",
                        "get /variantsets/{variantSetDbId}",
                        "get /vendor/orders/{orderId}/plates",
                        "get /observationunits/{observationUnitDbId}",
                        "get /variantsets",
                        "get /germplasm/{germplasmDbId}/pedigree",
                        "put /scales/{scaleDbId}",
                        "get /allelematrix",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "post /observationunits",
                        "post /locations",
                        "get /vendor/orders/{orderId}/status",
                        "get /references/{referenceDbId}/bases",
                        "post /search/calls",
                        "post /lists/{listDbId}/data",
                        "post /vendor/plates",
                        "post /search/germplasm",
                        "get /observationunits/table",
                        "get /callsets",
                        "post /attributevalues",
                        "get /images",
                        "get /calls",
                        "get /lists",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /references",
                        "post /delete/observations",
                        "get /crossingprojects",
                        "put /observations",
                        "post /delete/images",
                        "put /seasons/{seasonDbId}",
                        "get /seedlots/transactions",
                        "get /observationlevels",
                        "post /scales",
                        "put /seedlots/{seedLotDbId}",
                        "put /traits/{traitDbId}",
                        "get /people",
                        "get /seasons",
                        "post /programs",
                        "get /lists/{listDbId}",
                        "get /maps",
                        "get /search/programs/{searchResultsDbId}",
                        "get /crosses",
                        "get /variables",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/samples",
                        "get /search/references/{searchResultsDbId}",
                        "get /programs/{programDbId}",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "put /observations/{observationDbId}",
                        "get /samples/{sampleDbId}",
                        "post /attributes",
                        "get /ontologies",
                        "post /variantsets/extract",
                        "post /traits",
                        "get /traits",
                        "get /serverinfo",
                        "post /search/locations",
                        "post /search/variantsets",
                        "get /crossingprojects/{crossingProjectDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /breedingmethods",
                        "get /germplasm/{germplasmDbId}/progeny",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/variables/{searchResultsDbId}",
                        "get /seedlots/{seedLotDbId}",
                        "post /search/programs",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "post /search/references",
                        "get /vendor/orders",
                        "get /attributes",
                        "get /seedlots/{seedLotDbId}/transactions",
                        "get /search/plates/{searchResultsDbId}",
                        "post /germplasm",
                        "put /ontologies/{ontologyDbId}",
                        "post /pedigree",
                        "get /methods",
                        "put /attributevalues/{attributeValueDbId}",
                        "get /observations/{observationDbId}",
                        "post /crosses",
                        "put /plannedcrosses",
                        "post /lists",
                        "get /observationunits",
                        "get /trials/{trialDbId}",
                        "get /variants/{variantDbId}/calls",
                        "put /crosses",
                        "get /references/{referenceDbId}",
                        "post /search/lists",
                        "get /maps/{mapDbId}",
                        "post /methods",
                        "get /studytypes",
                        "post /trials",
                        "put /observationunits/{observationUnitDbId}",
                        "post /seedlots",
                        "get /programs",
                        "post /search/attributes",
                        "post /search/allelematrix",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /locations/{locationDbId}",
                        "get /referencesets",
                        "get /variables/{observationVariableDbId}",
                        "post /search/pedigree",
                        "put /programs/{programDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Common Crop Names",
                        "Crossing Projects",
                        "Crosses",
                        "Germplasm",
                        "Observations",
                        "Scales",
                        "People",
                        "Variants",
                        "Studies",
                        "Vendor",
                        "Locations",
                        "Observation Units",
                        "Plates",
                        "Traits",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Calls",
                        "Programs",
                        "Genome Maps",
                        "Pedigree",
                        "Germplasm Attribute Values",
                        "Methods",
                        "References",
                        "Seed Lots",
                        "Trials",
                        "Reference Sets",
                        "Images",
                        "Samples",
                        "Server Info",
                        "Call Sets",
                        "Lists",
                        "Events",
                        "Observation Variables",
                        "Ontologies",
                        "Seasons"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The total number of pages of elements available on the server. This should be calculated with the following formula. \n<br> totalPages = CEILING( totalCount / requested_page_size)"
            },
            {
                "context": {
                    "classes": [
                        "AlleleMatrix.pagination"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The total number of pages of elements available on the server. This should be calculated with the following formula. \n<br/>totalPages = CEILING( totalCount / requested_page_size)"
            }
        ]
    },
    "trait": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "traitAttributePUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Trait Attribute, usually in the form of a URI\n<br/>A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\""
            }
        ]
    },
    "traitAttributes": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\""
            }
        ]
    },
    "traitClass": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A classification to describe the type of trait and the context it should be considered in.\n<br/> examples- \"morphological\", \"phenological\", \"agronomical\", \"physiological\", \"abiotic stress\", \"biotic stress\", \"biochemical\", \"quality traits\", \"fertility\", etc."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables"
                    ],
                    "tags": [
                        "Observation Variables"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Variable's trait class (phenological, physiological, morphological, etc.)"
            }
        ]
    },
    "traitClasses": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables",
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of trait classes to filter search results"
            }
        ]
    },
    "traitDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Trait unique identifier"
            },
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a trait"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /traits"
                    ],
                    "tags": [
                        "Traits"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique identifier for a trait"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /traits/{traitDbId}",
                        "put /traits/{traitDbId}"
                    ],
                    "tags": [
                        "Traits"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Id of the trait to retrieve details of."
            }
        ]
    },
    "traitDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a Trait"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of trait unique ID to filter search results"
            }
        ]
    },
    "traitDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The description of a trait"
            }
        ]
    },
    "traitEntities": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\""
            }
        ]
    },
    "traitEntityPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Trait Entity, usually in the form of a URI\n<br/>A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\" "
            }
        ]
    },
    "traitName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variables",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Human readable name for the trait\n<br/>MIAPPE V1.1 (DM-88) Trait  Name of the trait of observation"
            },
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a trait\n<br/>MIAPPE V1.1 (DM-86) Trait - Name of the (plant or environmental) trait under observation"
            }
        ]
    },
    "traitNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a trait\n<br/>MIAPPE V1.1 (DM-86) Trait - Name of the (plant or environmental) trait under observation"
            }
        ]
    },
    "traitPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.trait"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables",
                        "get /variables/{observationVariableDbId}",
                        "put /traits/{traitDbId}",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "put /attributes/{attributeDbId}",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Traits",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Trait, usually in the form of a URI"
            }
        ]
    },
    "traitPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/attributes",
                        "post /search/variables"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Permanent Unique Identifier of a Trait, usually in the form of a URI"
            }
        ]
    },
    "transactionDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Unique id for a transaction on this server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unique DbId for the Seed Lot Transaction"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Unique id for a Transaction that has occurred"
            }
        ]
    },
    "transactionDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A general description of this Seed Lot Transaction"
            }
        ]
    },
    "transactionDirection": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter results to only include transactions directed to the specific Seed Lot (TO), away from the specific Seed Lot (FROM), or both (BOTH). The default value for this parameter is BOTH"
            }
        ]
    },
    "transactionTimestamp": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The time stamp for when the transaction occurred"
            }
        ]
    },
    "treatments": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}"
                    ],
                    "tags": [
                        "Observation Units"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "List of treatments applied to an observation unit.\n\nMIAPPE V1.1 (DM-74) Observation Unit factor value - List of values for each factor applied to the observation unit."
            }
        ]
    },
    "trialDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /pedigree",
                        "get /plates",
                        "get /maps",
                        "get /references",
                        "get /trials",
                        "get /observationunits",
                        "get /referencesets",
                        "get /observations",
                        "get /variables",
                        "get /observations/table",
                        "get /studies",
                        "get /observationlevels",
                        "get /samples",
                        "get /germplasm",
                        "get /observationunits/table"
                    ],
                    "tags": [
                        "Plates",
                        "Samples",
                        "Observation Variables",
                        "Genome Maps",
                        "Studies",
                        "Pedigree",
                        "Germplasm",
                        "References",
                        "Observation Units",
                        "Trials",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Trial` unique identifier. \n<br/>Use `GET /trials` to find the list of available `Trials` on a server."
            },
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /studies/{studyDbId}",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "get /studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Observation Units",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a trial"
            },
            {
                "context": {
                    "classes": [
                        "Plate"
                    ],
                    "paths": [
                        "get /plates",
                        "put /plates",
                        "get /plates/{plateDbId}",
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "post /plates",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /search/plates/{searchResultsDbId}",
                        "post /search/plates",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Plates",
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Trial` within the given database server"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a trial\n\nMIAPPE V1.1 (DM-2) Investigation unique ID - Identifier comprising the unique name of the institution/database hosting the submission of the investigation data, and the accession number of the investigation in that institution."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The internal trialDbId"
            }
        ]
    },
    "trialDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variantsets",
                        "post /search/studies",
                        "post /search/pedigree",
                        "post /search/references",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/callsets",
                        "post /search/trials",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Plates",
                        "Samples",
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Call Sets",
                        "Variants",
                        "Studies",
                        "Pedigree",
                        "Germplasm",
                        "References",
                        "Observation Units",
                        "Trials",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a trial to search for"
            }
        ]
    },
    "trialDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable description of a trial\n\nMIAPPE V1.1 (DM-4) Investigation description - Human-readable text describing the investigation in more detail."
            }
        ]
    },
    "trialName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /studies/{studyDbId}",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "post /search/studies",
                        "get /studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Observation Units",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a trial"
            },
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a trial\n\nMIAPPE V1.1 (DM-3) Investigation title - Human-readable string summarising the investigation."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Use this parameter to only return results associated with the given `Trial` by its human readable name. \n<br/>Use `GET /trials` to find the list of available `Trials` on a server."
            }
        ]
    },
    "trialNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variables",
                        "post /delete/observations",
                        "post /search/observationunits",
                        "post /search/referencesets",
                        "post /search/samples",
                        "post /search/variantsets",
                        "post /search/studies",
                        "post /search/pedigree",
                        "post /search/references",
                        "post /search/variants",
                        "post /search/attributes",
                        "post /search/callsets",
                        "post /search/trials",
                        "post /search/germplasm",
                        "post /search/plates",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Plates",
                        "Samples",
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Variant Sets",
                        "Call Sets",
                        "Variants",
                        "Studies",
                        "Pedigree",
                        "Germplasm",
                        "References",
                        "Observation Units",
                        "Trials",
                        "Observations",
                        "Reference Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of a trial to search for"
            }
        ]
    },
    "trialPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Trial"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /trials/{trialDbId}",
                        "get /trials/{trialDbId}",
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A permanent identifier for a trial. Could be DOI or other URI formatted identifier."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "Filter by trial PUI"
            }
        ]
    },
    "trialPUIs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/trials"
                    ],
                    "tags": [
                        "Trials"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A permanent identifier for a trial. Could be DOI or other URI formatted identifier."
            }
        ]
    },
    "type": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.ontologyReference.documentationLinks",
                        "Variable.method.ontologyReference.documentationLinks",
                        "Variable.trait.ontologyReference.documentationLinks",
                        "Variable.scale.ontologyReference.documentationLinks"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /scales/{scaleDbId}",
                        "post /vendor/plates",
                        "get /attributes",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "get /vendor/plates/{submissionId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Traits",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Vendor",
                        "Methods",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            },
            {
                "context": {
                    "classes": [
                        "Location.coordinates"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "put /images/{imageDbId}",
                        "get /observations",
                        "post /observationunits",
                        "post /locations",
                        "post /search/germplasm",
                        "post /search/images",
                        "post /germplasm",
                        "get /images",
                        "get /search/observationunits/{searchResultsDbId}",
                        "get /search/germplasm/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "get /search/locations/{searchResultsDbId}",
                        "put /observations",
                        "get /observationunits",
                        "post /delete/images",
                        "post /search/observations",
                        "get /locations/{locationDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /locations",
                        "post /search/observationunits",
                        "put /germplasm/{germplasmDbId}",
                        "put /observationunits/{observationUnitDbId}",
                        "get /search/images/{searchResultsDbId}",
                        "get /germplasm",
                        "put /observations/{observationDbId}",
                        "get /images/{imageDbId}",
                        "post /observations",
                        "post /images",
                        "put /locations/{locationDbId}",
                        "post /search/locations",
                        "put /images/{imageDbId}/imagecontent"
                    ],
                    "tags": [
                        "Images",
                        "Germplasm",
                        "Locations",
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The literal string \"Feature\""
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/germplasm/{searchResultsDbId}",
                        "get /germplasm/{germplasmDbId}",
                        "get /germplasm",
                        "put /germplasm/{germplasmDbId}",
                        "post /search/germplasm",
                        "post /germplasm"
                    ],
                    "tags": [
                        "Germplasm"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A descriptive classification for this synonym"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The type of map, usually \"Genetic\" or \"Physical\""
            },
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of map this represents, usually \"Genetic\" or \"Physical\""
            },
            {
                "context": {
                    "classes": [
                        "Study.contacts",
                        "Trial.contacts"
                    ],
                    "paths": [
                        "get /search/trials/{searchResultsDbId}",
                        "post /trials",
                        "get /trials",
                        "put /studies/{studyDbId}",
                        "get /trials/{trialDbId}",
                        "put /trials/{trialDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /search/trials",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Trials",
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of person this contact represents (ex: Coordinator, Scientist, PI, etc.)\n\nMIAPPE V1.1 (DM-34) Person role - Type of contribution of the person to the investigation"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The type of analysis."
            }
        ]
    },
    "unit": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "GenomeMap"
                    ],
                    "paths": [
                        "get /maps/{mapDbId}",
                        "get /maps"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The units used to describe the data in a `GenomeMap`"
            },
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Unit of the value for this parameter"
            }
        ]
    },
    "unitPUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "URI pointing to an ontology class for the unit"
            }
        ]
    },
    "units": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "This field can be used to describe the units used for this scale. This should be the abbreviated \nform of the units, intended to be displayed with every value using this scale. Usually this only \napplies when `dataType` is Numeric, but could also be included for other dataTypes when applicable."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The units or data type of the 'value'. \n<br>If the 'value' comes from a standardized vocabulary or an encoded list of values, then 'unit' should be 'code'. \n<br>If the 'value' IS NOT a number, then 'unit' should specify a data type eg. 'text', 'boolean', 'date', etc. \n<br>If the value IS a number, then 'unit' should specify the units used eg. 'ml', 'cm', etc\n<br>ICASA \"Unit_or_type\""
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seedlots",
                        "post /seedlots",
                        "get /seedlots/{seedLotDbId}",
                        "put /seedlots/{seedLotDbId}"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of the things being counted in this Seed Lot (seeds, bulbs, kg, tree, etc)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /seedlots/transactions",
                        "get /seedlots/transactions",
                        "get /seedlots/{seedLotDbId}/transactions"
                    ],
                    "tags": [
                        "Seed Lots"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Description of the things being transfered in this transaction (seeds, bulbs, kg, etc)"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates",
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Units (example: \"ng/ul\")"
            }
        ]
    },
    "unknownString": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The string to use as a representation for missing data"
            },
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "post /search/allelematrix",
                        "get /calls",
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /allelematrix",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "post /search/variantsets",
                        "get /variants/{variantDbId}/calls",
                        "get /search/allelematrix/{searchResultsDbId}",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The string used as a representation for missing data."
            }
        ]
    },
    "updated": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The time at which this call set was last updated"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The time at which this variant was last updated."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The time at which this record was last updated, in ISO 8601 format."
            }
        ]
    },
    "uploadedBy": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name or id of the user who uploaded the observation to the database system"
            }
        ]
    },
    "url": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "URL describing the location of this data file to view or download\n\nMIAPPE V1.1 (DM-37) Data file link - Link to the data file (or digital object) in a public database or in a persistent institutional repository; or identifier of the data file when submitted together with the MIAPPE submission."
            }
        ]
    },
    "userID": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Person"
                    ],
                    "paths": [
                        "get /search/people/{searchResultsDbId}",
                        "post /search/people",
                        "put /people/{personDbId}",
                        "get /people/{personDbId}",
                        "post /people",
                        "get /people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "A systems user ID associated with this person. Different from personDbId because you could have a person who is not a user of the system."
            }
        ]
    },
    "userIDs": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/people"
                    ],
                    "tags": [
                        "People"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A systems user ID associated with this person. Different from personDbId because you could have a person who is not a user of the system."
            }
        ]
    },
    "validValues": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "value": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.scale.validValues.categories"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "post /variables",
                        "get /variables",
                        "get /scales/{scaleDbId}",
                        "get /variables/{observationVariableDbId}",
                        "post /scales",
                        "post /search/attributes",
                        "put /attributes/{attributeDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /attributes"
                    ],
                    "tags": [
                        "Observation Variables",
                        "Germplasm Attributes",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The actual value for a category"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /attributevalues/{attributeValueDbId}",
                        "get /attributevalues/{attributeValueDbId}",
                        "get /attributevalues",
                        "post /search/attributevalues",
                        "get /search/attributevalues/{searchResultsDbId}",
                        "post /attributevalues"
                    ],
                    "tags": [
                        "Germplasm Attribute Values"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The value of this attribute for a given germplasm"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The single value of this event parameter. This single value is accurate for all the dates in the date range. If 'value' is populated then 'valuesByDate' should NOT be populated."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations"
                    ],
                    "tags": [
                        "Observation Units",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The value of the data collected as an observation"
            },
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Numerical or categorical value\n\nMIAPPE V1.1 (DM-59) Environment parameter value - Value of the environment parameter (defined above) constant within the experiment."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates",
                        "get /vendor/plates/{submissionId}"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Value (example: \"2.3\")"
            }
        ]
    },
    "valueDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "If the event parameter 'unit' field is 'code', then use 'valueDescription' to add a human readable description to the value."
            }
        ]
    },
    "valuePUI": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Study.environmentParameters"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "URI pointing to an ontology class for the parameter value"
            }
        ]
    },
    "values": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call.genotype"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "**Deprecated in v2.1** Please use `genotypeValue` or `genotypeMetadata`. Github issue number #491             \n<br>Repeated field of dynamically typed values."
            }
        ]
    },
    "valuesByDate": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /events"
                    ],
                    "tags": [
                        "Events"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An array of values corresponding to each timestamp in the 'discreteDates' array of this event. The 'valuesByDate' array should exactly match the size of the 'discreteDates' array. If 'valuesByDate' is populated then 'value' should NOT be populated."
            }
        ]
    },
    "variantCount": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /variantsets",
                        "post /variantsets/extract",
                        "post /search/variantsets",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The number of Variants included in this VariantSet"
            }
        ]
    },
    "variantDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix",
                        "get /calls"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Calls"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Variant` within the given database server"
            },
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID of the variant this call belongs to."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The unique id for a marker"
            },
            {
                "context": {
                    "classes": [
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Variant` within the given database server\n<br> A `Variant` can also represent a Marker "
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "post /search/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants/{variantDbId}/calls",
                        "get /variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "parameter",
                        "data field"
                    ]
                },
                "definition": "The ID which uniquely identifies a `Variant`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID of the `Variant` to be retrieved."
            }
        ]
    },
    "variantDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of unique identifiers for the Variants contained in the matrix response. This array should match the ordering for rows in the matrix."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix",
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `Variants` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/calls"
                    ],
                    "tags": [
                        "Calls"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `Variant` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `Variants`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a Variant"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /variantsets/extract"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Variant to search."
            }
        ]
    },
    "variantName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /calls",
                        "get /variantsets/{variantSetDbId}/calls",
                        "get /callsets/{callSetDbId}/calls",
                        "get /variants/{variantDbId}/calls",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "put /calls"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the variant this call belongs to."
            },
            {
                "context": {
                    "classes": [
                        "MarkerPosition"
                    ],
                    "paths": [
                        "get /markerpositions",
                        "get /search/markerpositions/{searchResultsDbId}",
                        "post /search/markerpositions"
                    ],
                    "tags": [
                        "Genome Maps"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name for a `Variant`\n<br> A `Variant` can also represent a Marker "
            }
        ]
    },
    "variantNames": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A human readable name associated with a `Variant`"
            }
        ]
    },
    "variantSetDbId": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /allelematrix",
                        "get /calls",
                        "get /callsets"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Calls",
                        "Call Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `VariantSet` within the given database server"
            },
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /calls",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "post /search/variantsets",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier for a VariantSet"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "An array of `VariantSet` IDs this variant belongs to. This also defines the `ReferenceSet` against which the `Variant` is to be interpreted."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID which uniquely identifies a `VariantSet`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID of the `VariantSet` to be retrieved."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The ID of the `Variant` to be retrieved."
            }
        ]
    },
    "variantSetDbIds": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "AlleleMatrix"
                    ],
                    "paths": [
                        "get /allelematrix",
                        "post /search/allelematrix",
                        "get /search/allelematrix/{searchResultsDbId}"
                    ],
                    "tags": [
                        "Allele Matrix"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of unique identifiers for the VariantSets contained in the matrix response. A VariantSet is a data set originating from a sequencing event. Often, users will only be interested in data from a single VariantSet, but in some cases a user might be interested in a matrix with data from multiple VariantSets."
            },
            {
                "context": {
                    "classes": [
                        "CallSet"
                    ],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/callsets",
                        "get /callsets/{callSetDbId}",
                        "get /search/callsets/{searchResultsDbId}",
                        "post /search/callsets",
                        "get /callsets"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The IDs of the variantSets this callSet has calls in."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/allelematrix",
                        "post /search/callsets",
                        "post /search/calls"
                    ],
                    "tags": [
                        "Allele Matrix",
                        "Calls",
                        "Call Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `VariantSets` within the given database server"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variants"
                    ],
                    "tags": [
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A list of IDs which uniquely identify `VariantSets`"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /search/variantsets"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The unique identifier representing a VariantSet"
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "post /variantsets/extract"
                    ],
                    "tags": [
                        "Variant Sets"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The VariantSet to search."
            }
        ]
    },
    "variantSetName": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Call"
                    ],
                    "paths": [
                        "get /search/variantsets/{searchResultsDbId}",
                        "get /calls",
                        "get /variantsets",
                        "get /variantsets/{variantSetDbId}/calls",
                        "post /variantsets/extract",
                        "get /callsets/{callSetDbId}/calls",
                        "post /search/variantsets",
                        "get /search/calls/{searchResultsDbId}",
                        "post /search/calls",
                        "get /variants/{variantDbId}/calls",
                        "put /calls",
                        "get /variantsets/{variantSetDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Calls",
                        "Call Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name for a VariantSet"
            }
        ]
    },
    "variantType": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /variantsets/{variantSetDbId}/variants",
                        "get /search/variants/{searchResultsDbId}",
                        "get /variants",
                        "post /search/variants",
                        "get /variants/{variantDbId}"
                    ],
                    "tags": [
                        "Variant Sets",
                        "Variants"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The \"variant_type\" is used to denote e.g. structural variants.\nExamples:\n  DUP  : duplication of sequence following \"start\"\n  DEL  : deletion of sequence following \"start\""
            }
        ]
    },
    "vendorAddress": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The street address of the vendor"
            }
        ]
    },
    "vendorCity": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the city where the vendor is located"
            }
        ]
    },
    "vendorContact": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "vendorContactName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name or identifier of the primary vendor contact"
            }
        ]
    },
    "vendorCountry": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The name of the country where the vendor is located"
            }
        ]
    },
    "vendorDescription": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A description of the vendor"
            }
        ]
    },
    "vendorEmail": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The primary email address used to contact the vendor"
            }
        ]
    },
    "vendorName": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The human readable name of the vendor"
            }
        ]
    },
    "vendorPhone": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The primary phone number used to contact the vendor"
            }
        ]
    },
    "vendorURL": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/specifications"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The primary URL for the vendor"
            }
        ]
    },
    "version": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Variable.method.ontologyReference",
                        "Variable.ontologyReference",
                        "Variable.trait.ontologyReference",
                        "Variable.scale.ontologyReference"
                    ],
                    "paths": [
                        "get /search/variables/{searchResultsDbId}",
                        "put /scales/{scaleDbId}",
                        "get /ontologies/{ontologyDbId}",
                        "get /scales/{scaleDbId}",
                        "post /vendor/plates",
                        "get /attributes",
                        "put /ontologies/{ontologyDbId}",
                        "get /methods",
                        "get /methods/{methodDbId}",
                        "post /scales",
                        "put /traits/{traitDbId}",
                        "post /ontologies",
                        "get /vendor/plates/{submissionId}",
                        "put /attributes/{attributeDbId}",
                        "post /methods",
                        "get /variables",
                        "post /search/attributes",
                        "get /traits/{traitDbId}",
                        "post /attributes",
                        "post /search/variables",
                        "get /ontologies",
                        "get /attributes/{attributeDbId}",
                        "get /search/attributes/{searchResultsDbId}",
                        "post /variables",
                        "post /traits",
                        "get /traits",
                        "get /variables/{observationVariableDbId}",
                        "post /vendor/orders",
                        "put /methods/{methodDbId}",
                        "get /scales",
                        "put /variables/{observationVariableDbId}",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Traits",
                        "Methods",
                        "Germplasm Attributes",
                        "Observation Variables",
                        "Vendor",
                        "Ontologies",
                        "Scales"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "Ontology version (no specific format)"
            },
            {
                "context": {
                    "classes": [
                        "Study.dataLinks"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The version number for this data \n\nMIAPPE V1.1 (DM-39) Data file version - The version of the dataset (the actual data)."
            },
            {
                "context": {
                    "classes": [
                        "Study.lastUpdate"
                    ],
                    "paths": [
                        "put /studies/{studyDbId}",
                        "get /search/studies/{searchResultsDbId}",
                        "get /studies",
                        "post /search/studies",
                        "post /studies",
                        "get /studies/{studyDbId}"
                    ],
                    "tags": [
                        "Studies"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "No Description Found"
            }
        ]
    },
    "versions": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /serverinfo"
                    ],
                    "tags": [
                        "Server Info"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The supported versions of a particular call"
            }
        ]
    },
    "volume": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "A value with units"
            }
        ]
    },
    "well": {
        "definitions": [
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "put /samples/{sampleDbId}",
                        "post /search/samples",
                        "post /samples",
                        "put /samples",
                        "get /samples",
                        "get /search/samples/{searchResultsDbId}",
                        "get /samples/{sampleDbId}"
                    ],
                    "tags": [
                        "Samples"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Well identifier for this `Sample` location in the `Plate`. Usually a concatenation of Row and Column, or just a number if the `Samples` are not part of an ordered `Plate`."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /vendor/plates/{submissionId}",
                        "post /vendor/plates",
                        "post /vendor/orders",
                        "get /vendor/orders/{orderId}/plates"
                    ],
                    "tags": [
                        "Vendor"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The Well identifier for this samples location in the plate. Usually a concatenation of Row and Column, or just a number if the samples are not part of an ordered plate."
            }
        ]
    },
    "year": {
        "definitions": [
            {
                "context": {
                    "classes": [
                        "Season"
                    ],
                    "paths": [
                        "get /observationunits/{observationUnitDbId}",
                        "post /observations",
                        "post /seasons",
                        "get /seasons/{seasonDbId}",
                        "get /search/observationunits/{searchResultsDbId}",
                        "put /observationunits",
                        "get /observations/{observationDbId}",
                        "get /search/observations/{searchResultsDbId}",
                        "post /search/observationunits",
                        "get /observationunits",
                        "put /observations",
                        "get /observations",
                        "post /observationunits",
                        "put /observationunits/{observationUnitDbId}",
                        "put /seasons/{seasonDbId}",
                        "put /observations/{observationDbId}",
                        "post /search/observations",
                        "get /seasons"
                    ],
                    "tags": [
                        "Observation Units",
                        "Seasons",
                        "Observations"
                    ],
                    "types": [
                        "data field"
                    ]
                },
                "definition": "The 4 digit year of the season."
            },
            {
                "context": {
                    "classes": [],
                    "paths": [
                        "get /seasons"
                    ],
                    "tags": [
                        "Seasons"
                    ],
                    "types": [
                        "parameter"
                    ]
                },
                "definition": "The 4 digit year of a season. Example \"2017\""
            }
        ]
    }
}